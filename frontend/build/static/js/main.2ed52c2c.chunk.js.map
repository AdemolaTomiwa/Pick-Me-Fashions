{"version":3,"sources":["constants/productConstant.js","reducers/productReducer.js","constants/errorConstant.js","reducers/errorReducer.js","constants/cartConstant.js","reducers/cartReducer.js","constants/userConstant.js","reducers/userReducer.js","constants/shippingConstant.js","reducers/shippingReducer.js","constants/orderConstant.js","reducers/orderReducer.js","reducers/index.js","store.js","actions/errorActions.js","actions/userActions.js","components/Header.js","components/Footer.js","actions/productActions.js","components/Loader.js","components/ErrorMessage.js","components/Product.js","screens/ProductListScreen.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductDetailsScreen.js","actions/cartActions.js","components/CartItem.js","screens/CartScreen.js","screens/SigninScreen.js","screens/RegisterScreen.js","components/Message.js","screens/ProfileScreen.js","screens/AdminProductListScreen.js","screens/AdminProductCreateScreen.js","screens/AdminUserListScreen.js","screens/AdminUserEditScreen.js","components/CheckOutSteps.js","screens/ShippingScreen.js","actions/shippingActions.js","screens/PaymentScreen.js","actions/orderActions.js","screens/PlaceOrderScreen.js","screens/OrderReviewScreen.js","screens/AdminOrderListScreen.js","screens/AdminOrderDetailsScreen.js","screens/MyOrderScreen.js","components/ScrollToTop.js","App.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","LATEST_PRODUCT_LIST_REQUEST","LATEST_PRODUCT_LIST_SUCCESS","LATEST_PRODUCT_LIST_FAIL","initialState","products","product","latestProducts","productLoading","GET_ERRORS","CLEAR_ERRORS","msg","status","id","CART_ADD_PRODUCT_REQUEST","CART_ADD_PRODUCT_SUCCESS","CART_REMOVE_PRODUCT_SUCCESS","cartLoading","cartItems","localStorage","getItem","JSON","parse","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LOGOUT_SUCCESS","user","isAuthenticated","token","userUpdated","userList","singleUser","updateSuccess","SAVE_SHIPPING_ADDRESS","SAVE_PAYMENT_METHOD","REMOVE_SHIPPING_ADDRESS","shippingAddress","paymentMethod","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_MY_LIST_REQUEST","ORDER_MY_LIST_SUCCESS","ORDER_MY_LIST_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","orderLoading","order","orders","myOrders","loading","success","loadingDelivered","successDelivered","combineReducers","state","action","type","payload","filter","_id","error","cart","item","existItem","find","x","map","userLoading","removeItem","shipping","middeware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","returnErrors","clearErrors","tokenConfig","getState","config","headers","Header","show","showAdmin","openNav","showContainer","React","createRef","showAdminContainer","handleClickOutside","e","current","contains","target","setState","showDropDown","showAdminDropDown","logout","props","toggleNav","closeNav","document","addEventListener","this","className","onClick","to","ref","name","isAdmin","Component","connect","dispatch","Footer","getProducts","axios","get","then","res","data","catch","err","Loader","ErrorMessage","message","Product","src","image","alt","price","ProductListScreen","prevProps","length","SampleNextArrow","SamplePrevArrow","ProductCarousel","settings","infinite","speed","slidesToShow","slidesToScroll","autoplay","nextArrow","prevArrow","HomeScreen","latestProduct","response","ProductDetailsScreen","qty","setQty","value","addToCart","match","params","history","push","getProduct","description","countInStock","onChange","Array","keys","disabled","setItem","stringify","CartItem","Number","deleteItem","removeFromCart","bind","CartScreen","checkOutHandler","location","search","split","reduce","a","c","SigninScreen","email","password","onSubmit","preventDefault","loginUser","redirect","htmlFor","placeholder","post","RegisterScreen","confirmPassword","newUser","registerUser","Mesasge","ProfileScreen","errorMsg","updatedProfile","updateUserProfile","Message","put","AdminProductList","currentPage","productsPerPage","handleClick","createProduct","deleteProduct","cellSpacing","category","brand","delete","AdminProductCreate","imageErr","errorMessage","serverError","imageLoading","uploadImage","file","files","formData","FormData","append","newProduct","cols","rows","AdminUserListScreen","usersPerPage","deleteUser","updateUser","getUserList","style","color","AdminUserEditScreen","updatedUser","getUser","checked","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","city","postalCode","country","addressData","saveShipping","CheckOutSteps","PaymentScreen","payment","savePayment","getOrder","PlaceOrderScreen","placeOrder","toPrice","num","toFixed","itemPrice","shippingPrice","taxPrice","newOrder","orderItems","totalPrice","userObject","createOrder","OrderReviewScreen","successPaymentHandler","paymentResult","payOrder","addPayPalScript","clientId","script","createElement","async","onload","sdk","body","appendChild","isPaid","paypal","loadingPay","isDelivered","deliveredAt","paidAt","amount","onSuccess","successPay","orderId","AdminOrderListScreen","ordersPerPage","getOrderDetails","getOrders","format","orderDate","backgroundColor","AdminOrderDetailsScreen","markPaid","payCashOrder","markDelivered","deliverOrder","loadingDeliver","successdeliver","MyOrderScreen","listMyOrders","ScrollToTop","pathname","useLocation","useEffect","scrollTo","App","path","exact","component","AdminUserList","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2ed52c2c.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const LATEST_PRODUCT_LIST_REQUEST = 'LATEST_PRODUCT_LIST_REQUEST';\r\nexport const LATEST_PRODUCT_LIST_SUCCESS = 'LATEST_PRODUCT_LIST_SUCCESS';\r\nexport const LATEST_PRODUCT_LIST_FAIL = 'LATEST_PRODUCT_LIST_FAIL';\r\n","import {\r\n   LATEST_PRODUCT_LIST_FAIL,\r\n   LATEST_PRODUCT_LIST_REQUEST,\r\n   LATEST_PRODUCT_LIST_SUCCESS,\r\n   PRODUCT_CREATE_FAIL,\r\n   PRODUCT_CREATE_REQUEST,\r\n   PRODUCT_CREATE_SUCCESS,\r\n   PRODUCT_DELETE_FAIL,\r\n   PRODUCT_DELETE_REQUEST,\r\n   PRODUCT_DELETE_SUCCESS,\r\n   PRODUCT_DETAILS_FAIL,\r\n   PRODUCT_DETAILS_REQUEST,\r\n   PRODUCT_DETAILS_SUCCESS,\r\n   PRODUCT_LIST_FAIL,\r\n   PRODUCT_LIST_REQUEST,\r\n   PRODUCT_LIST_SUCCESS,\r\n} from '../constants/productConstant';\r\n\r\nconst initialState = {\r\n   products: [],\r\n   product: {},\r\n   latestProducts: [],\r\n   productLoading: false,\r\n};\r\n\r\nexport default function productReducer(state = initialState, action) {\r\n   switch (action.type) {\r\n      case PRODUCT_LIST_REQUEST:\r\n      case PRODUCT_DETAILS_REQUEST:\r\n      case PRODUCT_CREATE_REQUEST:\r\n      case PRODUCT_DELETE_REQUEST:\r\n      case LATEST_PRODUCT_LIST_REQUEST:\r\n         return {\r\n            ...state,\r\n            productLoading: true,\r\n         };\r\n      case PRODUCT_LIST_SUCCESS:\r\n         return {\r\n            ...state,\r\n            products: action.payload,\r\n            productLoading: false,\r\n         };\r\n      case LATEST_PRODUCT_LIST_SUCCESS:\r\n         return {\r\n            ...state,\r\n            latestProducts: action.payload,\r\n            productLoading: false,\r\n         };\r\n      case PRODUCT_LIST_FAIL:\r\n         return {\r\n            ...state,\r\n            products: [],\r\n            productLoading: false,\r\n         };\r\n      case LATEST_PRODUCT_LIST_FAIL:\r\n         return {\r\n            ...state,\r\n            productLoading: false,\r\n         };\r\n      case PRODUCT_DETAILS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            product: action.payload,\r\n            productLoading: false,\r\n         };\r\n      case PRODUCT_DETAILS_FAIL:\r\n         return {\r\n            ...state,\r\n            product: {},\r\n            productLoading: false,\r\n         };\r\n      case PRODUCT_CREATE_SUCCESS:\r\n         return {\r\n            ...state,\r\n            ...action.payload,\r\n            productLoading: false,\r\n         };\r\n      case PRODUCT_DELETE_SUCCESS:\r\n         return {\r\n            ...state,\r\n            productLoading: false,\r\n            products: state.products.filter(\r\n               (product) => product._id !== action.payload\r\n            ),\r\n         };\r\n      case PRODUCT_CREATE_FAIL:\r\n      case PRODUCT_DELETE_FAIL:\r\n         return {\r\n            ...state,\r\n            productLoading: false,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n","import { GET_ERRORS, CLEAR_ERRORS } from '../constants/errorConstant';\r\n\r\nconst initialState = {\r\n   msg: null,\r\n   status: null,\r\n   id: null,\r\n};\r\n\r\nexport default function errorReducer(state = initialState, action) {\r\n   switch (action.type) {\r\n      case GET_ERRORS:\r\n         return {\r\n            msg: action.payload.msg,\r\n            id: action.payload.id,\r\n            status: action.payload.status,\r\n         };\r\n      case CLEAR_ERRORS:\r\n         return {\r\n            msg: null,\r\n            status: null,\r\n            id: null,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","export const CART_ADD_PRODUCT_REQUEST = 'CART_ADD_PRODUCT_REQUEST';\r\nexport const CART_ADD_PRODUCT_SUCCESS = 'CART_ADD_PRODUCT_SUCCESS';\r\nexport const CART_ADD_PRODUCT_FAIL = 'CART_ADD_PRODUCT_FAIL';\r\n\r\nexport const CART_REMOVE_PRODUCT_REQUEST = 'CART_REMOVE_PRODUCT_REQUEST';\r\nexport const CART_REMOVE_PRODUCT_SUCCESS = 'CART_REMOVE_PRODUCT_SUCCESS';\r\nexport const CART_REMOVE_PRODUCT_FAIL = 'CART_REMOVE_PRODUCT_FAIL';\r\n","import {\r\n   CART_ADD_PRODUCT_REQUEST,\r\n   CART_ADD_PRODUCT_SUCCESS,\r\n   CART_REMOVE_PRODUCT_SUCCESS,\r\n} from '../constants/cartConstant';\r\n\r\nconst initialState = {\r\n   cartLoading: false,\r\n   cartItems: localStorage.getItem('cartItems')\r\n      ? JSON.parse(localStorage.getItem('cartItems'))\r\n      : [],\r\n};\r\n\r\nexport default function cartReducer(state = initialState, action) {\r\n   switch (action.type) {\r\n      case CART_ADD_PRODUCT_REQUEST:\r\n         return {\r\n            ...state,\r\n            cartLoading: true,\r\n         };\r\n      case CART_ADD_PRODUCT_SUCCESS:\r\n         const item = action.payload;\r\n         const existItem = state.cartItems.find((x) => x.id === item.id);\r\n         if (existItem) {\r\n            return {\r\n               ...state,\r\n               cartItems: state.cartItems.map((x) =>\r\n                  x.id === existItem.id ? item : x\r\n               ),\r\n               cartLoading: false,\r\n            };\r\n         } else {\r\n            return {\r\n               ...state,\r\n               cartItems: [item, ...state.cartItems],\r\n               cartLoading: false,\r\n            };\r\n         }\r\n      case CART_REMOVE_PRODUCT_SUCCESS:\r\n         return {\r\n            ...state,\r\n            cartItems: state.cartItems.filter((x) => x.id !== action.payload),\r\n            cartLoading: false,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\n// export const USER_LOADING_REQUEST = 'USER_LOADING_REQUEST';\r\n// export const USER_LOADING_SUCCESS = 'USER_LOADING_SUCCESS';\r\n// export const USER_LOADING_FAIL = 'USER_LOADING_FAIL';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LOGOUT_SUCCESS = 'USER_LOGOUT_SUCCESS';\r\n","import {\r\n   USER_DELETE_FAIL,\r\n   USER_DELETE_REQUEST,\r\n   USER_DELETE_SUCCESS,\r\n   USER_DETAILS_FAIL,\r\n   USER_DETAILS_REQUEST,\r\n   USER_DETAILS_SUCCESS,\r\n   USER_LIST_FAIL,\r\n   USER_LIST_REQUEST,\r\n   USER_LIST_SUCCESS,\r\n   USER_LOGIN_FAIL,\r\n   USER_LOGIN_REQUEST,\r\n   USER_LOGIN_SUCCESS,\r\n   USER_LOGOUT_SUCCESS,\r\n   USER_REGISTER_FAIL,\r\n   USER_REGISTER_REQUEST,\r\n   USER_REGISTER_SUCCESS,\r\n   USER_UPDATE_FAIL,\r\n   USER_UPDATE_PROFILE_FAIL,\r\n   USER_UPDATE_PROFILE_REQUEST,\r\n   USER_UPDATE_PROFILE_RESET,\r\n   USER_UPDATE_PROFILE_SUCCESS,\r\n   USER_UPDATE_REQUEST,\r\n   USER_UPDATE_SUCCESS,\r\n} from '../constants/userConstant';\r\n\r\nconst initialState = {\r\n   user: localStorage.getItem('user')\r\n      ? JSON.parse(localStorage.getItem('user'))\r\n      : null,\r\n   isAuthenticated: localStorage.getItem('user') ? true : null,\r\n   token: localStorage.getItem('userToken'),\r\n   userUpdated: false,\r\n   userList: [],\r\n   singleUser: null,\r\n   updateSuccess: false,\r\n};\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n   switch (action.type) {\r\n      case USER_LOGIN_REQUEST:\r\n      case USER_REGISTER_REQUEST:\r\n      case USER_LIST_REQUEST:\r\n      case USER_DELETE_REQUEST:\r\n      case USER_DETAILS_REQUEST:\r\n      case USER_UPDATE_REQUEST:\r\n      case USER_UPDATE_PROFILE_REQUEST:\r\n         return {\r\n            ...state,\r\n            userLoading: true,\r\n         };\r\n      case USER_LOGIN_SUCCESS:\r\n      case USER_REGISTER_SUCCESS:\r\n         return {\r\n            ...state,\r\n            user: action.payload.user,\r\n            token: action.payload.token,\r\n            isAuthenticated: true,\r\n            userLoading: false,\r\n         };\r\n      case USER_UPDATE_PROFILE_SUCCESS:\r\n         return {\r\n            ...state,\r\n            user: action.payload.user,\r\n            token: action.payload.token,\r\n            isAuthenticated: true,\r\n            userLoading: false,\r\n            userUpdated: true,\r\n         };\r\n      case USER_LOGIN_FAIL:\r\n      case USER_REGISTER_FAIL:\r\n      case USER_LOGOUT_SUCCESS:\r\n      case USER_UPDATE_PROFILE_FAIL:\r\n         localStorage.removeItem('userToken');\r\n         localStorage.removeItem('user');\r\n         localStorage.removeItem('cartItems');\r\n         localStorage.removeItem('shippingAddress');\r\n         return {\r\n            ...state,\r\n            isAuthenticated: false,\r\n            userLoading: false,\r\n            user: null,\r\n            token: null,\r\n            userUpdated: false,\r\n         };\r\n      case USER_UPDATE_PROFILE_RESET:\r\n         return {\r\n            ...state,\r\n            userLoading: false,\r\n         };\r\n      case USER_LIST_SUCCESS:\r\n         return {\r\n            ...state,\r\n            userLoading: false,\r\n            userList: action.payload,\r\n            updateSuccess: false,\r\n            singleUser: null,\r\n         };\r\n      case USER_DELETE_SUCCESS:\r\n         return {\r\n            ...state,\r\n            userList: state.userList.filter(\r\n               (user) => user._id !== action.payload\r\n            ),\r\n            userLoading: false,\r\n         };\r\n      case USER_DETAILS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            singleUser: action.payload,\r\n            userLoading: false,\r\n         };\r\n      case USER_LIST_FAIL:\r\n      case USER_DELETE_FAIL:\r\n      case USER_DETAILS_FAIL:\r\n      case USER_UPDATE_FAIL:\r\n         return {\r\n            ...state,\r\n            userLoading: false,\r\n         };\r\n      case USER_UPDATE_SUCCESS:\r\n         return {\r\n            ...state,\r\n            userLoading: false,\r\n            updateSuccess: true,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","export const SAVE_SHIPPING_ADDRESS = 'SAVE_SHIPPING_ADDRESS';\r\nexport const SAVE_PAYMENT_METHOD = 'SAVE_PAYMENT_METHOD';\r\nexport const REMOVE_SHIPPING_ADDRESS = 'REMOVE_SHIPPING_ADDRESS';\r\n","import {\r\n   SAVE_PAYMENT_METHOD,\r\n   SAVE_SHIPPING_ADDRESS,\r\n   REMOVE_SHIPPING_ADDRESS,\r\n} from '../constants/shippingConstant';\r\n\r\nconst initialState = {\r\n   shippingAddress: localStorage.getItem('shippingAddress')\r\n      ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n      : null,\r\n   paymentMethod: null,\r\n};\r\n\r\nexport default function shippingReducer(state = initialState, action) {\r\n   switch (action.type) {\r\n      case SAVE_SHIPPING_ADDRESS:\r\n         return {\r\n            ...state,\r\n            shippingAddress: action.payload,\r\n         };\r\n      case SAVE_PAYMENT_METHOD:\r\n         return {\r\n            ...state,\r\n            paymentMethod: action.payload,\r\n         };\r\n      case REMOVE_SHIPPING_ADDRESS:\r\n         return {\r\n            ...state,\r\n            shippingAddress: null,\r\n            paymentMethod: null,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_MY_LIST_REQUEST = 'ORDER_MY_LIST_REQUEST';\r\nexport const ORDER_MY_LIST_SUCCESS = 'ORDER_MY_LIST_SUCCESS';\r\nexport const ORDER_MY_LIST_FAIL = 'ORDER_MY_LIST_FAIL';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n","import {\r\n   ORDER_CREATE_FAIL,\r\n   ORDER_CREATE_REQUEST,\r\n   ORDER_CREATE_SUCCESS,\r\n   ORDER_DELIVER_FAIL,\r\n   ORDER_DELIVER_REQUEST,\r\n   ORDER_DELIVER_RESET,\r\n   ORDER_DELIVER_SUCCESS,\r\n   ORDER_DETAILS_FAIL,\r\n   ORDER_DETAILS_REQUEST,\r\n   ORDER_DETAILS_SUCCESS,\r\n   ORDER_LIST_FAIL,\r\n   ORDER_LIST_REQUEST,\r\n   ORDER_LIST_SUCCESS,\r\n   ORDER_MY_LIST_FAIL,\r\n   ORDER_MY_LIST_REQUEST,\r\n   ORDER_MY_LIST_SUCCESS,\r\n   ORDER_PAY_FAIL,\r\n   ORDER_PAY_REQUEST,\r\n   ORDER_PAY_RESET,\r\n   ORDER_PAY_SUCCESS,\r\n} from '../constants/orderConstant';\r\n\r\nconst initialState = {\r\n   orderLoading: false,\r\n   order: null,\r\n   orders: [],\r\n   myOrders: [],\r\n   loading: false,\r\n   success: false,\r\n   loadingDelivered: false,\r\n   successDelivered: false,\r\n};\r\n\r\nexport default function orderReducer(state = initialState, action) {\r\n   switch (action.type) {\r\n      case ORDER_LIST_REQUEST:\r\n      case ORDER_CREATE_REQUEST:\r\n      case ORDER_DETAILS_REQUEST:\r\n      case ORDER_MY_LIST_REQUEST:\r\n         return {\r\n            ...state,\r\n            orderLoading: true,\r\n         };\r\n      case ORDER_LIST_SUCCESS:\r\n         return {\r\n            ...state,\r\n            orders: action.payload,\r\n            orderLoading: false,\r\n         };\r\n      case ORDER_LIST_FAIL:\r\n         return {\r\n            ...state,\r\n            orderLoading: false,\r\n            orders: [],\r\n         };\r\n      case ORDER_CREATE_SUCCESS:\r\n         localStorage.removeItem('cartItems');\r\n         return {\r\n            ...state,\r\n            ...action.payload,\r\n            orderLoading: false,\r\n         };\r\n      case ORDER_DETAILS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            order: action.payload,\r\n            orderLoading: false,\r\n         };\r\n      case ORDER_DETAILS_FAIL:\r\n         return {\r\n            ...state,\r\n            orderLoading: false,\r\n         };\r\n      case ORDER_CREATE_FAIL:\r\n         return {\r\n            ...state,\r\n            orderLoading: false,\r\n            order: null,\r\n         };\r\n      case ORDER_PAY_REQUEST:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n         };\r\n      case ORDER_PAY_SUCCESS:\r\n         return {\r\n            ...state,\r\n            order: action.payload,\r\n            loading: false,\r\n            success: true,\r\n         };\r\n      case ORDER_PAY_FAIL:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n         };\r\n      case ORDER_PAY_RESET:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            success: false,\r\n         };\r\n      case ORDER_DELIVER_REQUEST:\r\n         return {\r\n            ...state,\r\n            loadingDelivered: true,\r\n         };\r\n      case ORDER_DELIVER_SUCCESS:\r\n         return {\r\n            ...state,\r\n            order: action.payload,\r\n            loadingDelivered: false,\r\n            successDelivered: true,\r\n         };\r\n      case ORDER_DELIVER_FAIL:\r\n         return {\r\n            ...state,\r\n            loadingDelivered: false,\r\n         };\r\n      case ORDER_DELIVER_RESET:\r\n         return {\r\n            ...state,\r\n            loadingDelivered: false,\r\n            successDelivered: false,\r\n         };\r\n      case ORDER_MY_LIST_SUCCESS:\r\n         return {\r\n            ...state,\r\n            myOrders: action.payload,\r\n            orderLoading: false,\r\n         };\r\n      case ORDER_MY_LIST_FAIL:\r\n         return {\r\n            ...state,\r\n            myOrders: [],\r\n            orderLoading: false,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport productReducer from './productReducer';\r\nimport errorReducer from './errorReducer';\r\nimport cartReducer from './cartReducer';\r\nimport userReducer from './userReducer';\r\nimport shippingReducer from './shippingReducer';\r\nimport orderReducer from './orderReducer';\r\n// import latestProductReducer from './latestProductsReducer';\r\n\r\nexport default combineReducers({\r\n   products: productReducer,\r\n   error: errorReducer,\r\n   cart: cartReducer,\r\n   user: userReducer,\r\n   shipping: shippingReducer,\r\n   order: orderReducer,\r\n   //    latestProduct: latestProductReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middeware = [thunk];\r\n\r\nconst store = createStore(\r\n   rootReducer,\r\n   initialState,\r\n   compose(\r\n      applyMiddleware(...middeware),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n         window.__REDUX_DEVTOOLS_EXTENSION__()\r\n   )\r\n);\r\n\r\nexport default store;\r\n","import { GET_ERRORS, CLEAR_ERRORS } from '../constants/errorConstant';\r\n\r\nexport const returnErrors = (msg, status, id = null) => {\r\n   return {\r\n      type: GET_ERRORS,\r\n      payload: { msg, status, id },\r\n   };\r\n};\r\n\r\nexport const clearErrors = () => {\r\n   return {\r\n      type: CLEAR_ERRORS,\r\n   };\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n   USER_DELETE_FAIL,\r\n   USER_DELETE_REQUEST,\r\n   USER_DELETE_SUCCESS,\r\n   USER_DETAILS_FAIL,\r\n   USER_DETAILS_REQUEST,\r\n   USER_DETAILS_SUCCESS,\r\n   USER_LIST_FAIL,\r\n   USER_LIST_REQUEST,\r\n   USER_LIST_SUCCESS,\r\n   USER_LOGIN_FAIL,\r\n   USER_LOGIN_REQUEST,\r\n   USER_LOGIN_SUCCESS,\r\n   USER_LOGOUT_SUCCESS,\r\n   USER_REGISTER_FAIL,\r\n   USER_REGISTER_REQUEST,\r\n   USER_REGISTER_SUCCESS,\r\n   USER_UPDATE_FAIL,\r\n   USER_UPDATE_PROFILE_FAIL,\r\n   USER_UPDATE_PROFILE_REQUEST,\r\n   USER_UPDATE_PROFILE_RESET,\r\n   USER_UPDATE_PROFILE_SUCCESS,\r\n   USER_UPDATE_REQUEST,\r\n   USER_UPDATE_SUCCESS,\r\n} from '../constants/userConstant';\r\nimport { returnErrors } from './errorActions';\r\n\r\n// Login existing user\r\nexport const loginUser = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n   });\r\n\r\n   const config = {\r\n      headers: {\r\n         'Content-type': 'application/json',\r\n      },\r\n   };\r\n\r\n   axios\r\n      .post(' /api/auth', user, config)\r\n      .then((res) => {\r\n         dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n         localStorage.setItem('userToken', res.data.token);\r\n         localStorage.setItem('user', JSON.stringify(res.data.user));\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'USER_LOGIN_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\n// Register new user\r\nexport const registerUser = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n   });\r\n\r\n   const config = {\r\n      headers: {\r\n         'Content-type': 'application/json',\r\n      },\r\n   };\r\n\r\n   axios\r\n      .post(' /api/users', user, config)\r\n      .then((res) => {\r\n         dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n         localStorage.setItem('userToken', res.data.token);\r\n         localStorage.setItem('user', JSON.stringify(res.data.user));\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'USER_REGISTER_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\n// Logout user\r\nexport const logout = () => (dispatch) => {\r\n   dispatch({\r\n      type: USER_LOGOUT_SUCCESS,\r\n   });\r\n\r\n   localStorage.removeItem('userToken');\r\n   localStorage.removeItem('user');\r\n   localStorage.removeItem('cartItems');\r\n   localStorage.removeItem('shippingAddress');\r\n};\r\n\r\n// Get list of users from DB\r\nexport const getUserList = () => (dispatch, getState) => {\r\n   dispatch({\r\n      type: USER_LIST_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .get(' /api/users', tokenConfig(getState))\r\n      .then((res) => {\r\n         dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n      })\r\n      .catch((err) => {\r\n         const errorMsg = 'An error occured! Please try again in one minute!';\r\n         dispatch(\r\n            returnErrors(errorMsg, err.response.status, 'USER_LIST_FAIL')\r\n         );\r\n         dispatch({\r\n            type: USER_LIST_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\nexport const deleteUser = (id) => (dispatch, getState) => {\r\n   dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .delete(` /api/users/${id}`, tokenConfig(getState))\r\n      .then((res) => {\r\n         dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: id,\r\n         });\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'USER_DELETE_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: USER_DELETE_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\n// Get a User from DB by the ID\r\nexport const getUser = (id) => (dispatch, getState) => {\r\n   dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .get(` /api/users/${id}`, tokenConfig(getState))\r\n      .then((res) => {\r\n         dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'USER_DETAILS_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\nexport const updateUserProfile = (user) => (dispatch, getState) => {\r\n   dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .put(' /api/users/profile/mine', user, tokenConfig(getState))\r\n      .then((res) => {\r\n         dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n         localStorage.setItem('userToken', res.data.token);\r\n         localStorage.setItem('user', JSON.stringify(res.data.user));\r\n         dispatch({\r\n            type: USER_UPDATE_PROFILE_RESET,\r\n         });\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'USER_UPDATE_PROFILE_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\nexport const updateUser = (id, updatedUser) => (dispatch, getState) => {\r\n   dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .put(` /api/users/${id}`, updatedUser, tokenConfig(getState))\r\n      .then((res) => {\r\n         dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'USER_UPDATE_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\nexport const tokenConfig = (getState) => {\r\n   const token = getState().user.token;\r\n\r\n   const config = {\r\n      headers: {\r\n         'Content-type': 'application/json',\r\n      },\r\n   };\r\n\r\n   if (token) {\r\n      config.headers['x-auth-token'] = token;\r\n   }\r\n\r\n   return config;\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/userActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n   state = {\r\n      show: false,\r\n      showAdmin: false,\r\n      openNav: false,\r\n   };\r\n\r\n   showContainer = React.createRef();\r\n   state = {\r\n      show: false,\r\n   };\r\n\r\n   showAdminContainer = React.createRef();\r\n   state = {\r\n      showAdmin: false,\r\n   };\r\n\r\n   componentDidMount() {\r\n      document.addEventListener('mousedown', this.handleClickOutside);\r\n   }\r\n\r\n   handleClickOutside = (e) => {\r\n      if (\r\n         this.showContainer.current &&\r\n         !this.showContainer.current.contains(e.target)\r\n      ) {\r\n         this.setState({ show: false });\r\n      }\r\n\r\n      if (\r\n         this.showAdminContainer.current &&\r\n         !this.showAdminContainer.current.contains(e.target)\r\n      ) {\r\n         this.setState({ showAdmin: false });\r\n      }\r\n   };\r\n\r\n   showDropDown = () => {\r\n      this.setState({ show: !this.state.show });\r\n   };\r\n\r\n   showAdminDropDown = () => {\r\n      this.setState({ showAdmin: !this.state.showAdmin });\r\n   };\r\n\r\n   logout = () => {\r\n      this.props.logout();\r\n   };\r\n\r\n   toggleNav = () => {\r\n      this.setState({ openNav: !this.state.openNav });\r\n   };\r\n\r\n   closeNav = () => {\r\n      this.setState({ openNav: !this.state.openNav });\r\n   };\r\n\r\n   render() {\r\n      const { user } = this.props;\r\n      return (\r\n         <header>\r\n            <div className=\"header-container\">\r\n               <div className=\"header\">\r\n                  <div\r\n                     onClick={this.toggleNav}\r\n                     className={this.state.openNav ? 'burger close' : 'burger'}\r\n                  >\r\n                     <div className=\"line-1\"></div>\r\n                     <div className=\"line-2\"></div>\r\n                     <div className=\"line-3\"></div>\r\n                  </div>\r\n                  <div className=\"logo\">\r\n                     <Link\r\n                        onClick={() => this.setState({ openNav: false })}\r\n                        to=\"/\"\r\n                     >\r\n                        <h3>Pick Me</h3>\r\n                     </Link>\r\n                  </div>\r\n                  <div className={this.state.openNav ? 'icons open' : 'icons'}>\r\n                     <div className=\"cart\">\r\n                        <Link onClick={this.closeNav} to=\"/cart\">\r\n                           <i className=\"fas fa-shopping-cart\"></i> Cart\r\n                        </Link>\r\n                     </div>\r\n                     {user ? (\r\n                        <>\r\n                           <div ref={this.showContainer} className=\"user\">\r\n                              <Link onClick={this.showDropDown} to=\"#\">\r\n                                 {user.name}{' '}\r\n                                 <i className=\"fas fa-caret-down\"></i>\r\n                              </Link>\r\n                              <ul\r\n                                 className={\r\n                                    this.state.show\r\n                                       ? 'drop-down'\r\n                                       : 'hide-drop-down'\r\n                                 }\r\n                              >\r\n                                 <li>\r\n                                    <Link onClick={this.closeNav} to=\"/profile\">\r\n                                       Profile\r\n                                    </Link>\r\n                                 </li>\r\n                                 <li>\r\n                                    <Link\r\n                                       onClick={this.closeNav}\r\n                                       to=\"/myorders\"\r\n                                    >\r\n                                       My Orders\r\n                                    </Link>\r\n                                 </li>\r\n                                 <li onClick={this.logout}>\r\n                                    <Link onClick={this.closeNav} to=\"#\">\r\n                                       Logout\r\n                                    </Link>\r\n                                 </li>\r\n                              </ul>\r\n                           </div>\r\n                           {user.isAdmin ? (\r\n                              <div\r\n                                 ref={this.showAdminContainer}\r\n                                 className=\"admin\"\r\n                              >\r\n                                 <Link onClick={this.showAdminDropDown} to=\"#\">\r\n                                    Admin <i className=\"fas fa-caret-down\"></i>\r\n                                 </Link>\r\n                                 <ul\r\n                                    className={\r\n                                       this.state.showAdmin\r\n                                          ? 'drop-down'\r\n                                          : 'hide-drop-down'\r\n                                    }\r\n                                 >\r\n                                    <li>\r\n                                       <Link\r\n                                          onClick={this.closeNav}\r\n                                          to=\"/admin-user-list\"\r\n                                       >\r\n                                          User\r\n                                       </Link>\r\n                                    </li>\r\n                                    <li>\r\n                                       <Link\r\n                                          onClick={this.closeNav}\r\n                                          to=\"/admin-product-list\"\r\n                                       >\r\n                                          Products\r\n                                       </Link>\r\n                                    </li>\r\n                                    <li>\r\n                                       <Link\r\n                                          onClick={this.closeNav}\r\n                                          to=\"/admin-order-list\"\r\n                                       >\r\n                                          Order\r\n                                       </Link>\r\n                                    </li>\r\n                                 </ul>\r\n                              </div>\r\n                           ) : null}\r\n                        </>\r\n                     ) : (\r\n                        <div className=\"sign-in\">\r\n                           <Link onClick={this.closeNav} to=\"/signin\">\r\n                              <i className=\"fas fa-user\"></i> Sign In\r\n                           </Link>\r\n                        </div>\r\n                     )}\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </header>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuthenticated: state.user.isAuthenticated,\r\n   user: state.user.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n   return (\r\n      <footer>\r\n         <p>Copyright &copy; Pick Me</p>\r\n      </footer>\r\n   );\r\n}\r\n\r\nexport default Footer;\r\n","import axios from 'axios';\r\nimport {\r\n   PRODUCT_CREATE_FAIL,\r\n   PRODUCT_CREATE_REQUEST,\r\n   PRODUCT_CREATE_SUCCESS,\r\n   PRODUCT_DELETE_FAIL,\r\n   PRODUCT_DELETE_REQUEST,\r\n   PRODUCT_DELETE_SUCCESS,\r\n   PRODUCT_DETAILS_FAIL,\r\n   PRODUCT_DETAILS_REQUEST,\r\n   PRODUCT_DETAILS_SUCCESS,\r\n   PRODUCT_LIST_FAIL,\r\n   PRODUCT_LIST_REQUEST,\r\n   PRODUCT_LIST_SUCCESS,\r\n   LATEST_PRODUCT_LIST_FAIL,\r\n   LATEST_PRODUCT_LIST_REQUEST,\r\n   LATEST_PRODUCT_LIST_SUCCESS,\r\n} from '../constants/productConstant';\r\nimport { returnErrors } from './errorActions';\r\nimport { tokenConfig } from './userActions';\r\n\r\n// Get all products from DB\r\nexport const getProducts = () => (dispatch) => {\r\n   dispatch({\r\n      type: PRODUCT_LIST_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .get('/api/products')\r\n      .then((res) => {\r\n         dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n      })\r\n      .catch((err) => {\r\n         const errorMsg = 'An error occured! Please try again in one minute!';\r\n         dispatch(returnErrors(errorMsg, 400, 'PRODUCT_LIST_FAIL'));\r\n         dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\n// Get a product from DB by the ID\r\nexport const getProduct = (id) => (dispatch) => {\r\n   dispatch({\r\n      type: PRODUCT_DETAILS_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .get(`/api/products/${id}`)\r\n      .then((res) => {\r\n         dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'PRODUCT_DETAILS_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\nexport const createProduct = (product) => (dispatch, getState) => {\r\n   dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n   });\r\n\r\n   const user = getState().user.user;\r\n\r\n   if (user.isAdmin) {\r\n      axios\r\n         .post('/api/products', product, tokenConfig(getState))\r\n         .then((res) => {\r\n            dispatch({\r\n               type: PRODUCT_CREATE_SUCCESS,\r\n               payload: res.data,\r\n            });\r\n         })\r\n         .catch((err) => {\r\n            dispatch(\r\n               returnErrors(\r\n                  err.response.data.msg,\r\n                  err.response.status,\r\n                  'PRODUCT_CREATE_FAIL'\r\n               )\r\n            );\r\n            dispatch({\r\n               type: PRODUCT_CREATE_FAIL,\r\n            });\r\n         });\r\n   } else {\r\n      dispatch({\r\n         type: PRODUCT_CREATE_FAIL,\r\n      });\r\n   }\r\n};\r\n\r\nexport const deleteProduct = (id) => (dispatch, getState) => {\r\n   dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .delete(`/api/products/${id}`, tokenConfig(getState))\r\n      .then((res) => {\r\n         dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n            payload: id,\r\n         });\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'PRODUCT_DELETE_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\nexport const latestProduct = () => (dispatch) => {\r\n   dispatch({\r\n      type: LATEST_PRODUCT_LIST_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .get('/api/products/latest/products')\r\n      .then((res) => {\r\n         dispatch({\r\n            type: LATEST_PRODUCT_LIST_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'LATEST_PRODUCT_LIST_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: LATEST_PRODUCT_LIST_FAIL,\r\n         });\r\n      });\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nclass Loader extends Component {\r\n   render() {\r\n      return (\r\n         <div className=\"loader\">\r\n            <i className=\"fas fa-spinner fa-spin\"></i>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorMessage extends Component {\r\n   render() {\r\n      const { message } = this.props;\r\n      return <div className=\"error-msg\">{message}</div>;\r\n   }\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Product extends Component {\r\n   render() {\r\n      const { product } = this.props;\r\n      return (\r\n         <div className=\"product\">\r\n            <Link to={`/product/${product._id}`}>\r\n               <div className=\"img\">\r\n                  <img src={product.image} alt={product.name} />\r\n               </div>\r\n            </Link>\r\n\r\n            <div className=\"details\">\r\n               <Link to={`/product/${product._id}`}>\r\n                  <h4>{product.name}</h4>\r\n               </Link>\r\n               <h3>#{product.price}</h3>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Product;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport Product from '../components/Product';\r\n\r\nclass ProductListScreen extends Component {\r\n   state = {\r\n      msg: null,\r\n   };\r\n   componentDidUpdate(prevProps) {\r\n      const { error } = this.props;\r\n      if (error !== prevProps.error) {\r\n         // Check for PRODUCT LIST FAIL Error\r\n         if (error.id === 'PRODUCT_LIST_FAIL') {\r\n            this.setState({ msg: error.msg });\r\n         } else {\r\n            this.setState({ msg: null });\r\n         }\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { productLoading, products, error } = this.props;\r\n      return (\r\n         <div className=\"product-list\">\r\n            <h1>Latest Products</h1>\r\n            {productLoading ? (\r\n               <Loader />\r\n            ) : error.msg !== null ? (\r\n               <ErrorMessage message={error.msg} />\r\n            ) : products.length === 0 ? (\r\n               <div className=\"alert\">Your Product list is empty.</div>\r\n            ) : (\r\n               <div className=\"products\">\r\n                  {products.map((product) => (\r\n                     <Product key={product._id} product={product} />\r\n                  ))}\r\n               </div>\r\n            )}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   products: state.products.products,\r\n   productLoading: state.products.productLoading,\r\n   error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ProductListScreen);\r\n","import React, { Component } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from './Loader';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nfunction SampleNextArrow(props) {\r\n   const { onClick } = props;\r\n   return (\r\n      <div className=\"icons-right\" onClick={onClick}>\r\n         <i className=\"fas fa-angle-right\"></i>\r\n      </div>\r\n   );\r\n}\r\n\r\nfunction SamplePrevArrow(props) {\r\n   const { onClick } = props;\r\n   return (\r\n      <div className=\"icons-left\" onClick={onClick}>\r\n         <i className=\"fas fa-angle-left\"></i>\r\n      </div>\r\n   );\r\n}\r\n\r\nclass ProductCarousel extends Component {\r\n   render() {\r\n      const settings = {\r\n         infinite: true,\r\n         speed: 1000,\r\n         slidesToShow: 1,\r\n         slidesToScroll: 1,\r\n         autoplay: true,\r\n         nextArrow: <SampleNextArrow />,\r\n         prevArrow: <SamplePrevArrow />,\r\n      };\r\n      const { latestProducts, productLoading, error } = this.props;\r\n      return (\r\n         <div className=\"product-carousel\">\r\n            {productLoading ? (\r\n               <Loader />\r\n            ) : error.msg !== null ? (\r\n               <ErrorMessage message={error.msg} />\r\n            ) : (\r\n               <Slider {...settings}>\r\n                  {latestProducts.map((product) => (\r\n                     <Link key={product._id} to={`product/${product._id}`}>\r\n                        <div className=\"product\">\r\n                           <h2>\r\n                              {' '}\r\n                              {product.name} (#{product.price}){' '}\r\n                           </h2>\r\n                           <img src={product.image} alt={product.name} />\r\n                        </div>\r\n                     </Link>\r\n                  ))}\r\n               </Slider>\r\n            )}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   productLoading: state.products.productLoading,\r\n   latestProducts: state.products.latestProducts,\r\n   error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ProductCarousel);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getProducts, latestProduct } from '../actions/productActions';\r\nimport { clearErrors } from '../actions/errorActions';\r\nimport ProductListScreen from './ProductListScreen';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\n\r\nclass HomeScreen extends Component {\r\n   componentDidMount() {\r\n      this.props.getProducts();\r\n      this.props.latestProduct();\r\n      this.props.clearErrors();\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"home-screen\">\r\n            <ProductCarousel />\r\n            <ProductListScreen />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default connect(null, {\r\n   getProducts,\r\n   latestProduct,\r\n   clearErrors,\r\n})(HomeScreen);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getProduct } from '../actions/productActions';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport Loader from '../components/Loader';\r\n\r\nclass ProductDetailsScreen extends Component {\r\n   state = {\r\n      qty: '1',\r\n   };\r\n\r\n   componentDidMount() {\r\n      const id = this.props.match.params.id;\r\n      this.props.getProduct(id);\r\n   }\r\n\r\n   setQty = (e) => {\r\n      this.setState({ qty: e.target.value });\r\n   };\r\n\r\n   addToCart = () => {\r\n      const id = this.props.match.params.id;\r\n      this.props.history.push(`/cart/${id}?qty=${this.state.qty}`);\r\n   };\r\n\r\n   render() {\r\n      const { error, productLoading, product } = this.props;\r\n      return (\r\n         <>\r\n            {productLoading ? (\r\n               <Loader />\r\n            ) : error.msg !== null ? (\r\n               <>\r\n                  <div className=\"back\">\r\n                     <Link to=\"/\">Go Back</Link>\r\n                  </div>\r\n                  <ErrorMessage message={error.msg} />\r\n               </>\r\n            ) : (\r\n               <div className=\"product-details\">\r\n                  <div className=\"back\">\r\n                     <Link to=\"/\">Go Back</Link>\r\n                  </div>\r\n                  <div className=\"details\">\r\n                     <div className=\"img\">\r\n                        <img src={product.image} alt={product.name} />\r\n                     </div>\r\n                     <div className=\"title\">\r\n                        <h2>{product.name}</h2>\r\n                        <div className=\"line\"></div>\r\n                        <p>Price: #{product.price}</p>\r\n                        <div className=\"line\"></div>\r\n                        <p>Description: {product.description}</p>\r\n                     </div>\r\n                     <div className=\"box\">\r\n                        <div>\r\n                           <p>Price: </p> <span>#{product.price}</span>\r\n                        </div>\r\n                        <div>\r\n                           <p>Status: </p>{' '}\r\n                           <span>\r\n                              {product.countInStock >= 1\r\n                                 ? 'In Stock'\r\n                                 : 'Out of Stock'}\r\n                           </span>\r\n                        </div>\r\n                        {product.countInStock >= 1 ? (\r\n                           <div className=\"select-box\">\r\n                              <p>Qty:</p>\r\n                              <div className=\"select\">\r\n                                 <select\r\n                                    value={this.state.qty}\r\n                                    onChange={this.setQty}\r\n                                 >\r\n                                    {[\r\n                                       ...Array(product.countInStock).keys(),\r\n                                    ].map((x) => (\r\n                                       <option key={x + 1} value={x + 1}>\r\n                                          {x + 1}\r\n                                       </option>\r\n                                    ))}\r\n                                 </select>\r\n                                 <i className=\"fas fa-caret-down\"></i>\r\n                              </div>\r\n                           </div>\r\n                        ) : null}\r\n                        <div onClick={this.addToCart} className=\"button\">\r\n                           <button\r\n                              disabled={product.countInStock <= 0}\r\n                              className=\"btn btn-primary\"\r\n                           >\r\n                              Add To cart\r\n                           </button>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            )}\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   error: state.error,\r\n   product: state.products.product,\r\n   productLoading: state.products.productLoading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProduct })(ProductDetailsScreen);\r\n","import axios from 'axios';\r\nimport {\r\n   CART_ADD_PRODUCT_FAIL,\r\n   CART_ADD_PRODUCT_REQUEST,\r\n   CART_ADD_PRODUCT_SUCCESS,\r\n   CART_REMOVE_PRODUCT_SUCCESS,\r\n} from '../constants/cartConstant';\r\nimport { returnErrors } from './errorActions';\r\n\r\n// Add to cart\r\nexport const addToCart = (id, qty) => (dispatch, getState) => {\r\n   dispatch({\r\n      type: CART_ADD_PRODUCT_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .get(`/api/products/${id}`)\r\n      .then((res) => {\r\n         const { name, image, price, _id, countInStock } = res.data;\r\n         dispatch({\r\n            type: CART_ADD_PRODUCT_SUCCESS,\r\n            payload: {\r\n               name,\r\n               image,\r\n               price,\r\n               countInStock,\r\n               id: _id,\r\n               qty,\r\n            },\r\n         });\r\n         localStorage.setItem(\r\n            'cartItems',\r\n            JSON.stringify(getState().cart.cartItems)\r\n         );\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'CART_ADD_PRODUCT_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: CART_ADD_PRODUCT_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\n// Remove from cart\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n   dispatch({\r\n      type: CART_REMOVE_PRODUCT_SUCCESS,\r\n      payload: id,\r\n   });\r\n\r\n   localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass CartItem extends Component {\r\n   setQty = (id, e) => {\r\n      this.props.addToCart(id, Number(e.target.value));\r\n   };\r\n\r\n   deleteItem = (id) => {\r\n      this.props.removeFromCart(id);\r\n   };\r\n\r\n   render() {\r\n      const { item } = this.props;\r\n      return (\r\n         <div className=\"item\">\r\n            <Link to={`/product/${item.id}`}>\r\n               <div className=\"img\">\r\n                  <img src={item.image} alt={item.name} />\r\n               </div>\r\n            </Link>\r\n            <Link to={`/product/${item.id}`}>\r\n               <div className=\"name\">\r\n                  <h4>{item.name}</h4>\r\n               </div>\r\n            </Link>\r\n            <div className=\"price\">\r\n               <h4>#{item.price}</h4>\r\n            </div>\r\n            <div className=\"select-box\">\r\n               <div className=\"select\">\r\n                  <select\r\n                     value={item.qty}\r\n                     onChange={this.setQty.bind(this, item.id)}\r\n                  >\r\n                     {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                           {x + 1}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n                  <i className=\"fas fa-caret-down\"></i>\r\n               </div>\r\n            </div>\r\n            <div\r\n               onClick={this.deleteItem.bind(this, item.id)}\r\n               className=\"delete-btn\"\r\n            >\r\n               <i className=\"fas fa-trash\"></i>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default connect(null, { addToCart, removeFromCart })(CartItem);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { addToCart } from '../actions/cartActions';\r\nimport CartItem from '../components/CartItem';\r\nimport Loader from '../components/Loader';\r\n\r\nclass CartScreen extends Component {\r\n   componentDidMount() {\r\n      const id = this.props.match.params.id;\r\n      const qty = this.props.location.search\r\n         ? Number(this.props.location.search.split('=')[1])\r\n         : '1';\r\n\r\n      if (id) {\r\n         this.props.addToCart(id, qty);\r\n      } else {\r\n         return;\r\n      }\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      const { cartItems } = this.props;\r\n      if (cartItems !== prevProps.cartItems) {\r\n         this.props.history.push('/cart');\r\n      }\r\n   }\r\n\r\n   checkOutHandler = (e) => {\r\n      const { user } = this.props;\r\n      if (!user) {\r\n         this.props.history.push('/signin?redirect=shipping');\r\n      } else {\r\n         this.props.history.push('/shipping');\r\n      }\r\n   };\r\n\r\n   render() {\r\n      const { cartItems, cartLoading } = this.props;\r\n      return (\r\n         <div className=\"cart-page\">\r\n            {cartLoading ? (\r\n               <Loader />\r\n            ) : (\r\n               <div className=\"cart\">\r\n                  <div className=\"cart-content\">\r\n                     <h1>Shopping Cart</h1>\r\n                     {cartItems.length === 0 ? (\r\n                        <div className=\"alert\">\r\n                           Your cart is empty. <Link to=\"/\">Go Back</Link>\r\n                        </div>\r\n                     ) : (\r\n                        <div className=\"cart-items\">\r\n                           {cartItems.map((item) => (\r\n                              <CartItem key={item.id} item={item} />\r\n                           ))}\r\n                        </div>\r\n                     )}\r\n                  </div>\r\n                  <div className=\"box\">\r\n                     <div className=\"title\">\r\n                        <h3>\r\n                           Subtotal ({cartItems.reduce((a, c) => a + c.qty, 0)}{' '}\r\n                           ) items\r\n                        </h3>\r\n                        <h4>\r\n                           #{' '}\r\n                           {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\r\n                        </h4>\r\n                     </div>\r\n                     <div onClick={this.checkOutHandler} className=\"button\">\r\n                        <button\r\n                           disabled={cartItems.length <= 0}\r\n                           className=\"btn btn-primary\"\r\n                        >\r\n                           Proceed to checkout\r\n                        </button>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            )}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   user: state.user.user,\r\n   cartItems: state.cart.cartItems,\r\n   cartLoading: state.cart.cartLoading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addToCart })(CartScreen);\r\n","import { connect } from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginUser } from '../actions/userActions';\r\nimport { clearErrors } from '../actions/errorActions';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport Loader from '../components/Loader';\r\n\r\nclass SigninScreen extends Component {\r\n   state = {\r\n      email: '',\r\n      password: '',\r\n      msg: null,\r\n   };\r\n\r\n   componentDidMount() {\r\n      const { isAuthenticated } = this.props;\r\n      if (isAuthenticated) {\r\n         this.props.history.push('/');\r\n      }\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      const { error, isAuthenticated } = this.props;\r\n      if (error !== prevProps.error) {\r\n         if (error.id === 'USER_LOGIN_FAIL') {\r\n            this.setState({ msg: error.msg });\r\n         } else {\r\n            this.setState({ msg: null });\r\n         }\r\n      }\r\n\r\n      if (isAuthenticated) {\r\n         this.props.history.push('/');\r\n         this.props.clearErrors();\r\n      }\r\n\r\n      const redirect = this.props.location.search\r\n         ? this.props.location.search.split('=')[1]\r\n         : '/';\r\n\r\n      if (isAuthenticated === true) {\r\n         return this.props.history.push(redirect);\r\n      }\r\n   }\r\n\r\n   onChange = (e) => {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n   };\r\n\r\n   onSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      const { email, password } = this.state;\r\n\r\n      const user = {\r\n         email,\r\n         password,\r\n      };\r\n\r\n      // Attempt Login\r\n      this.props.loginUser(user);\r\n   };\r\n\r\n   render() {\r\n      const { email, password, msg } = this.state;\r\n      const { userLoading } = this.props;\r\n      return (\r\n         <div className=\"auth-page\">\r\n            <h1>Sign In</h1>\r\n            {userLoading ? <Loader /> : ''}\r\n            {msg ? <ErrorMessage message={msg} /> : ''}\r\n            <form onSubmit={this.onSubmit}>\r\n               <div>\r\n                  <label htmlFor=\"email\">Email Address</label>\r\n                  <input\r\n                     type=\"email\"\r\n                     name=\"email\"\r\n                     value={email}\r\n                     placeholder=\"Enter Email\"\r\n                     id=\"email\"\r\n                     onChange={this.onChange}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                     type=\"password\"\r\n                     name=\"password\"\r\n                     value={password}\r\n                     placeholder=\"Enter Password\"\r\n                     id=\"password\"\r\n                     onChange={this.onChange}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <button className=\"btn btn-primary\">Sign In</button>\r\n               </div>\r\n               <p>\r\n                  New Customer? <Link to=\"/register\">Register</Link>\r\n               </p>\r\n            </form>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   error: state.error,\r\n   userLoading: state.user.userLoading,\r\n   isAuthenticated: state.user.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser, clearErrors })(\r\n   SigninScreen\r\n);\r\n","import { connect } from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { registerUser } from '../actions/userActions';\r\nimport { clearErrors } from '../actions/errorActions';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport Loader from '../components/Loader';\r\n\r\nclass RegisterScreen extends Component {\r\n   state = {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      msg: null,\r\n   };\r\n\r\n   componentDidMount() {\r\n      const { isAuthenticated } = this.props;\r\n      if (isAuthenticated) {\r\n         this.props.history.push('/');\r\n      }\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      const { error, isAuthenticated } = this.props;\r\n      if (error !== prevProps.error) {\r\n         if (error.id === 'USER_REGISTER_FAIL') {\r\n            this.setState({ msg: error.msg });\r\n         } else {\r\n            this.setState({ msg: null });\r\n         }\r\n      }\r\n\r\n      if (isAuthenticated) {\r\n         this.props.history.push('/');\r\n         this.props.clearErrors();\r\n      }\r\n   }\r\n\r\n   onChange = (e) => {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n   };\r\n\r\n   onSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      const { name, email, password, confirmPassword } = this.state;\r\n\r\n      //   Simple Validation\r\n      if (password !== confirmPassword) {\r\n         return this.setState({ msg: 'Password do not match' });\r\n      }\r\n\r\n      const newUser = {\r\n         name,\r\n         email,\r\n         password,\r\n      };\r\n\r\n      // Attempt Login\r\n      this.props.registerUser(newUser);\r\n   };\r\n\r\n   render() {\r\n      const { name, email, password, confirmPassword, msg } = this.state;\r\n      const { userLoading } = this.props;\r\n      return (\r\n         <div className=\"auth-page\">\r\n            <h1>Regsiter</h1>\r\n            {userLoading ? <Loader /> : ''}\r\n            {msg ? <ErrorMessage message={msg} /> : ''}\r\n            <form onSubmit={this.onSubmit}>\r\n               <div>\r\n                  <label htmlFor=\"name\">name Address</label>\r\n                  <input\r\n                     type=\"text\"\r\n                     name=\"name\"\r\n                     value={name}\r\n                     placeholder=\"Enter Name\"\r\n                     id=\"name\"\r\n                     onChange={this.onChange}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <label htmlFor=\"email\">Email Address</label>\r\n                  <input\r\n                     type=\"email\"\r\n                     name=\"email\"\r\n                     value={email}\r\n                     placeholder=\"Enter Email\"\r\n                     id=\"email\"\r\n                     onChange={this.onChange}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                     type=\"password\"\r\n                     name=\"password\"\r\n                     value={password}\r\n                     placeholder=\"Enter Password\"\r\n                     id=\"password\"\r\n                     onChange={this.onChange}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                  <input\r\n                     type=\"password\"\r\n                     name=\"confirmPassword\"\r\n                     value={confirmPassword}\r\n                     placeholder=\"Enter Password\"\r\n                     id=\"confirmPassword\"\r\n                     onChange={this.onChange}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <button className=\"btn btn-primary\">Register</button>\r\n               </div>\r\n               <p>\r\n                  Have an Account? <Link to=\"/signin\">Login</Link>\r\n               </p>\r\n            </form>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   error: state.error,\r\n   userLoading: state.user.userLoading,\r\n   isAuthenticated: state.user.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser, clearErrors })(\r\n   RegisterScreen\r\n);\r\n","import React, { Component } from 'react';\r\n\r\nclass Mesasge extends Component {\r\n   render() {\r\n      const { message } = this.props;\r\n      return <div className=\"success-msg\">{message}</div>;\r\n   }\r\n}\r\n\r\nexport default Mesasge;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateUserProfile } from '../actions/userActions';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\n\r\nclass ProfileScreen extends Component {\r\n   state = {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      errorMsg: null,\r\n   };\r\n\r\n   componentDidMount() {\r\n      const { user } = this.props;\r\n\r\n      if (!user) {\r\n         this.props.history.push('/signin');\r\n      } else {\r\n         this.setState({ name: user.name, email: user.email });\r\n      }\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      const { isAuthenticated } = this.props;\r\n\r\n      if (!isAuthenticated) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n   }\r\n\r\n   onChange = (e) => {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n   };\r\n\r\n   onSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      const { name, email, password, confirmPassword } = this.state;\r\n\r\n      // Simple validation\r\n      if (!name) {\r\n         this.setState({ errorMsg: 'Please enter your Name' });\r\n      } else if (!email) {\r\n         this.setState({ errorMsg: 'Please enter your Email' });\r\n      } else if (!password) {\r\n         this.setState({ errorMsg: 'Please enter your Password' });\r\n      } else if (password.length <= 5) {\r\n         this.setState({ errorMsg: 'Password should be at least 6 character' });\r\n      } else if (password !== confirmPassword) {\r\n         return this.setState({ errorMsg: 'Password do not match' });\r\n      } else {\r\n         const updatedProfile = {\r\n            name,\r\n            email,\r\n            password,\r\n         };\r\n         this.props.updateUserProfile(updatedProfile);\r\n         this.setState({ errorMsg: null });\r\n      }\r\n   };\r\n   render() {\r\n      const { name, email, password, confirmPassword, errorMsg } = this.state;\r\n      const { userUpdated, userLoading } = this.props;\r\n      return (\r\n         <div className=\"profile-page\">\r\n            <h1>User Profile</h1>\r\n            {userLoading ? <Loader /> : ''}\r\n            {errorMsg ? <ErrorMessage message={errorMsg} /> : ''}\r\n            {userUpdated ? <Message message={'Profile Updated!'} /> : null}\r\n            <form onSubmit={this.onSubmit}>\r\n               <div>\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <input\r\n                     type=\"name\"\r\n                     name=\"name\"\r\n                     value={name}\r\n                     placeholder=\"Enter Name\"\r\n                     id=\"name\"\r\n                     onChange={this.onChange}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                     type=\"email\"\r\n                     name=\"email\"\r\n                     value={email}\r\n                     placeholder=\"Enter Email\"\r\n                     id=\"email\"\r\n                     onChange={this.onChange}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                     type=\"password\"\r\n                     name=\"password\"\r\n                     value={password}\r\n                     placeholder=\"Enter Password\"\r\n                     id=\"password\"\r\n                     onChange={this.onChange}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                  <input\r\n                     type=\"password\"\r\n                     name=\"confirmPassword\"\r\n                     value={confirmPassword}\r\n                     placeholder=\"Confirm Password\"\r\n                     id=\"confirmPassword\"\r\n                     onChange={this.onChange}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <button className=\"btn btn-primary\">Update</button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   user: state.user.user,\r\n   isAuthenticated: state.user.isAuthenticated,\r\n   userUpdated: state.user.userUpdated,\r\n   userLoading: state.user.userLoading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateUserProfile })(ProfileScreen);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport { getProducts, deleteProduct } from '../actions/productActions';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nclass AdminProductList extends Component {\r\n   state = {\r\n      currentPage: 1,\r\n      productsPerPage: 5,\r\n   };\r\n\r\n   componentDidMount() {\r\n      const { user } = this.props;\r\n\r\n      if (!user || !user.isAdmin) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n\r\n      this.props.getProducts();\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      const { isAuthenticated, error } = this.props;\r\n\r\n      if (!isAuthenticated) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n\r\n      if (error !== prevProps.error) {\r\n         // Check for PRODUCT LIST FAIL Error\r\n         if (error.id === 'PRODUCT_DELETE_FAIL') {\r\n            this.props.getProducts();\r\n         }\r\n      }\r\n   }\r\n\r\n   handleClick = (e) => {\r\n      this.setState({\r\n         currentPage: Number(e.target.id),\r\n      });\r\n   };\r\n\r\n   createProduct = () => {\r\n      this.props.history.push('/admin-product-create');\r\n   };\r\n\r\n   // Delete Product\r\n   deleteProduct = (id) => {\r\n      this.props.deleteProduct(id);\r\n\r\n      this.props.getProducts();\r\n   };\r\n\r\n   render() {\r\n      const { products, productLoading, error } = this.props;\r\n\r\n      return (\r\n         <div className=\"admin-product-list\">\r\n            <div className=\"header\">\r\n               <h1>Product</h1>\r\n               <div onClick={this.createProduct} className=\"btn btn-dark\">\r\n                  <i className=\"fas fa-plus\"></i> Create Product\r\n               </div>\r\n            </div>\r\n            {productLoading ? (\r\n               <Loader />\r\n            ) : error.msg !== null ? (\r\n               <ErrorMessage message={error.msg} />\r\n            ) : products.length === 0 ? (\r\n               <div className=\"alert\">Your Product list is empty.</div>\r\n            ) : (\r\n               <div className=\"product\">\r\n                  <table cellSpacing=\"0\">\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Id</th>\r\n                           <th>Name</th>\r\n                           <th>Price</th>\r\n                           <th>Category</th>\r\n                           <th>Brand</th>\r\n                           <th></th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {products.map((product) => (\r\n                           <tr key={product._id}>\r\n                              <td>{product._id}</td>\r\n                              <td>{product.name}</td>\r\n                              <td>#{product.price}</td>\r\n                              <td>{product.category}</td>\r\n                              <td>{product.brand}</td>\r\n                              <td\r\n                                 onClick={this.deleteProduct.bind(\r\n                                    this,\r\n                                    product._id\r\n                                 )}\r\n                              >\r\n                                 <i className=\"fas fa-trash\"></i>\r\n                              </td>\r\n                           </tr>\r\n                        ))}\r\n                     </tbody>\r\n                  </table>\r\n                  <div className=\"mobile\">\r\n                     {products.map((product) => (\r\n                        <div key={product._id} className=\"mobile-product\">\r\n                           <div className=\"img\">\r\n                              <img src={product.image} alt={product.name} />\r\n                           </div>\r\n                           <div className=\"content\">\r\n                              <h3>{product.name}</h3>\r\n                              <p>Order {product._id}</p>\r\n                              <p> #{product.price} </p>\r\n                              <p> Category - {product.category} </p>\r\n                              <p> Brand - {product.brand} </p>\r\n                           </div>\r\n                           <div\r\n                              className=\"icon\"\r\n                              onClick={this.deleteProduct.bind(\r\n                                 this,\r\n                                 product._id\r\n                              )}\r\n                           >\r\n                              <i className=\"fas fa-trash\"></i>\r\n                           </div>\r\n                        </div>\r\n                     ))}\r\n                  </div>\r\n               </div>\r\n            )}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   user: state.user.user,\r\n   isAuthenticated: state.user.isAuthenticated,\r\n   products: state.products.products,\r\n   productLoading: state.products.productLoading,\r\n   error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProducts, deleteProduct })(\r\n   AdminProductList\r\n);\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProduct } from '../actions/productActions';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport Loader from '../components/Loader';\r\n\r\nclass AdminProductCreate extends Component {\r\n   state = {\r\n      name: '',\r\n      image: '',\r\n      price: '',\r\n      description: '',\r\n      category: '',\r\n      countInStock: '',\r\n      brand: '',\r\n      imageErr: false,\r\n      errorMessage: false,\r\n      serverError: false,\r\n      imageLoading: false,\r\n   };\r\n\r\n   componentDidMount() {\r\n      const { user } = this.props;\r\n\r\n      if (!user || !user.isAdmin) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      const { product, isAuthenticated, error } = this.props;\r\n\r\n      if (product !== prevProps.product) {\r\n         return this.props.history.push('/admin-product-list');\r\n      }\r\n\r\n      if (!isAuthenticated) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n\r\n      if (error !== prevProps.error) {\r\n         this.setState({ serverError: true });\r\n      }\r\n   }\r\n\r\n   onChange = (e) => {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n   };\r\n\r\n   uploadImage = (e) => {\r\n      const file = e.target.files[0];\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n      this.setState({ imageLoading: true });\r\n\r\n      const config = {\r\n         headers: {\r\n            'Content-type': 'multi-part/form-data',\r\n         },\r\n      };\r\n\r\n      axios\r\n         .post('/api/uploads', formData, config)\r\n         .then((res) => {\r\n            this.setState({\r\n               image: res.data,\r\n               imageErr: false,\r\n               imageLoading: false,\r\n            });\r\n         })\r\n         .catch((err) => {\r\n            this.setState({ image: '', imageErr: true, imageLoading: false });\r\n         });\r\n   };\r\n\r\n   onSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      const { name, image, price, brand, category, countInStock, description } =\r\n         this.state;\r\n\r\n      // Simple validation\r\n      if (\r\n         !name ||\r\n         !price ||\r\n         !image ||\r\n         !description ||\r\n         !category ||\r\n         !brand ||\r\n         !countInStock\r\n      ) {\r\n         return this.setState({ errorMessage: true });\r\n      }\r\n\r\n      const newProduct = {\r\n         name,\r\n         image,\r\n         price,\r\n         description,\r\n         countInStock,\r\n         brand,\r\n         category,\r\n      };\r\n\r\n      this.props.createProduct(newProduct);\r\n   };\r\n\r\n   render() {\r\n      const {\r\n         name,\r\n         price,\r\n         description,\r\n         category,\r\n         countInStock,\r\n         brand,\r\n         imageErr,\r\n         errorMessage,\r\n         serverError,\r\n         imageLoading,\r\n      } = this.state;\r\n\r\n      const { productLoading, error } = this.props;\r\n\r\n      return (\r\n         <div className=\"admin-product-create\">\r\n            <h1>Edit Product</h1>\r\n            {errorMessage ? (\r\n               <ErrorMessage message=\"Please enter all field!\" />\r\n            ) : null}\r\n            {serverError ? <ErrorMessage message={error.msg} /> : null}\r\n            {productLoading ? <Loader /> : null}\r\n            <form onSubmit={this.onSubmit}>\r\n               <div>\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <input\r\n                     type=\"text\"\r\n                     id=\"name\"\r\n                     placeholder=\"Enter Product Name\"\r\n                     name=\"name\"\r\n                     value={name}\r\n                     onChange={this.onChange}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <label htmlFor=\"price\">Price</label>\r\n                  <input\r\n                     type=\"text\"\r\n                     id=\"price\"\r\n                     placeholder=\"Enter Product Price\"\r\n                     name=\"price\"\r\n                     value={price}\r\n                     onChange={this.onChange}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <label htmlFor=\"image\">Image</label>\r\n                  <input\r\n                     type=\"file\"\r\n                     className=\"file\"\r\n                     id=\"image\"\r\n                     name=\"image\"\r\n                     onChange={this.uploadImage}\r\n                  />\r\n                  {imageLoading ? (\r\n                     <Loader />\r\n                  ) : imageErr ? (\r\n                     <p className=\"image-error\">\r\n                        <i className=\"fas fa-exclamation-circle\"></i> Only\r\n                        Image!\r\n                     </p>\r\n                  ) : null}\r\n               </div>\r\n               <div>\r\n                  <label htmlFor=\"brand\">Brand</label>\r\n                  <input\r\n                     type=\"text\"\r\n                     id=\"brand\"\r\n                     placeholder=\"Enter Product Brand\"\r\n                     name=\"brand\"\r\n                     value={brand}\r\n                     onChange={this.onChange}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <label htmlFor=\"countInStock\">Count In Stock</label>\r\n                  <input\r\n                     type=\"number\"\r\n                     id=\"countInStock\"\r\n                     placeholder=\"Enter Product Count In Stock\"\r\n                     name=\"countInStock\"\r\n                     value={countInStock}\r\n                     onChange={this.onChange}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <label htmlFor=\"category\">Category</label>\r\n                  <input\r\n                     type=\"text\"\r\n                     id=\"category\"\r\n                     placeholder=\"Enter Product Category\"\r\n                     name=\"category\"\r\n                     value={category}\r\n                     onChange={this.onChange}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <label htmlFor=\"description\">Description</label>\r\n\r\n                  <textarea\r\n                     placeholder=\"Enter Product Description\"\r\n                     onChange={this.onChange}\r\n                     value={description}\r\n                     name=\"description\"\r\n                     id=\"description\"\r\n                     cols=\"30\"\r\n                     rows=\"5\"\r\n                  ></textarea>\r\n               </div>\r\n               <div>\r\n                  <button className=\"btn btn-dark\">Add Product</button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   user: state.user.user,\r\n   isAuthenticated: state.user.isAuthenticated,\r\n   productLoading: state.products.productLoading,\r\n   product: state.products.product,\r\n   error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProduct })(AdminProductCreate);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserList, deleteUser } from '../actions/userActions';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport Loader from '../components/Loader';\r\n\r\nclass AdminUserListScreen extends Component {\r\n   state = {\r\n      currentPage: 1,\r\n      usersPerPage: 5,\r\n   };\r\n\r\n   componentDidMount() {\r\n      const { user } = this.props;\r\n\r\n      if (!user || !user.isAdmin) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n\r\n      this.props.getUserList();\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      const { isAuthenticated } = this.props;\r\n\r\n      if (!isAuthenticated) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n   }\r\n\r\n   handleClick = (e) => {\r\n      this.setState({\r\n         currentPage: Number(e.target.id),\r\n      });\r\n   };\r\n\r\n   deleteUser = (id) => {\r\n      this.props.deleteUser(id);\r\n   };\r\n\r\n   updateUser = (id) => {\r\n      this.props.history.push(`/admin-user-edit/${id}`);\r\n   };\r\n\r\n   render() {\r\n      const { userLoading, userList, error } = this.props;\r\n\r\n      return (\r\n         <div className=\"admin-user-list\">\r\n            <h1>User</h1>\r\n\r\n            {userLoading ? (\r\n               <Loader />\r\n            ) : error.msg !== null ? (\r\n               <ErrorMessage message={error.msg} />\r\n            ) : userList.length === 0 ? (\r\n               <div className=\"alert\">Your Product list is empty.</div>\r\n            ) : (\r\n               <div className=\"user\">\r\n                  <table cellSpacing=\"0\">\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Id</th>\r\n                           <th>Name</th>\r\n                           <th>Email</th>\r\n                           <th>Is Admin</th>\r\n                           <th></th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {userList.map((user) => (\r\n                           <tr key={user._id}>\r\n                              <td>{user._id}</td>\r\n                              <td>{user.name}</td>\r\n                              <td>{user.email}</td>\r\n                              <td>\r\n                                 {user.isAdmin ? (\r\n                                    <i className=\"fas fa-check\"></i>\r\n                                 ) : (\r\n                                    <i className=\"fas fa-times\"></i>\r\n                                 )}{' '}\r\n                              </td>\r\n                              <td className=\"icons\">\r\n                                 <i\r\n                                    onClick={this.updateUser.bind(\r\n                                       this,\r\n                                       user._id\r\n                                    )}\r\n                                    className=\"fas fa-edit\"\r\n                                 ></i>\r\n                                 <i\r\n                                    onClick={this.deleteUser.bind(\r\n                                       this,\r\n                                       user._id\r\n                                    )}\r\n                                    className=\"fas fa-trash\"\r\n                                 ></i>\r\n                              </td>\r\n                           </tr>\r\n                        ))}\r\n                     </tbody>\r\n                  </table>\r\n                  <div className=\"mobile\">\r\n                     {userList.map((user) => (\r\n                        <div className=\"mobile-user\">\r\n                           <h3>\r\n                              <span>Name</span> - {user.name}\r\n                           </h3>\r\n                           <h3>\r\n                              <span>Email</span> - {user.email}\r\n                           </h3>\r\n                           <h3>\r\n                              <span>User Id</span> - {user._id}{' '}\r\n                           </h3>\r\n                           <h3>\r\n                              <span>Is Admin</span> -{' '}\r\n                              {user.isAdmin ? (\r\n                                 <i\r\n                                    style={{ color: '#28a745' }}\r\n                                    className=\"fas fa-check\"\r\n                                 ></i>\r\n                              ) : (\r\n                                 <i\r\n                                    style={{ color: '#dc3545' }}\r\n                                    className=\"fas fa-times\"\r\n                                 ></i>\r\n                              )}{' '}\r\n                           </h3>\r\n                           <div className=\"icons\">\r\n                              <i\r\n                                 onClick={this.updateUser.bind(this, user._id)}\r\n                                 className=\"fas fa-edit\"\r\n                              ></i>\r\n                              <i\r\n                                 onClick={this.deleteUser.bind(this, user._id)}\r\n                                 className=\"fas fa-trash\"\r\n                              ></i>\r\n                           </div>\r\n                        </div>\r\n                     ))}\r\n                  </div>\r\n               </div>\r\n            )}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   user: state.user.user,\r\n   userLoading: state.user.userLoading,\r\n   isAuthenticated: state.user.isAuthenticated,\r\n   userList: state.user.userList,\r\n   error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserList, deleteUser })(\r\n   AdminUserListScreen\r\n);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUser, updateUser } from '../actions/userActions';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport Loader from '../components/Loader';\r\n\r\nclass AdminUserEditScreen extends Component {\r\n   state = {\r\n      id: '',\r\n      name: '',\r\n      email: '',\r\n      isAdmin: '',\r\n   };\r\n\r\n   componentDidMount() {\r\n      const id = this.props.match.params.id;\r\n\r\n      const { user } = this.props;\r\n\r\n      if (!user || !user.isAdmin) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n\r\n      this.props.getUser(id);\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      const { isAuthenticated, singleUser, updateSuccess } = this.props;\r\n\r\n      if (!isAuthenticated) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n\r\n      if (singleUser !== prevProps.singleUser) {\r\n         return this.setState({\r\n            isAdmin: singleUser.isAdmin,\r\n            name: singleUser.name,\r\n            email: singleUser.email,\r\n            id: singleUser._id,\r\n         });\r\n      }\r\n\r\n      if (updateSuccess) {\r\n         this.props.history.push('/admin-user-list');\r\n      }\r\n   }\r\n\r\n   onChange = () => {\r\n      this.setState({ isAdmin: !this.state.isAdmin });\r\n   };\r\n\r\n   onSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      const { id } = this.state;\r\n\r\n      const updatedUser = {\r\n         isAdmin: this.state.isAdmin,\r\n      };\r\n\r\n      this.props.updateUser(id, updatedUser);\r\n   };\r\n\r\n   render() {\r\n      const { isAdmin, name, email } = this.state;\r\n      const { userLoading, error } = this.props;\r\n      return (\r\n         <div className=\"admin-user-edit\">\r\n            <h1>User Edit</h1>\r\n            {userLoading ? (\r\n               <Loader />\r\n            ) : error.msg !== null ? (\r\n               <ErrorMessage message={error.msg} />\r\n            ) : (\r\n               <form onSubmit={this.onSubmit}>\r\n                  <div>\r\n                     <div className=\"box\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <div>{name}</div>\r\n                     </div>\r\n                     <div className=\"box\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <div>{email}</div>\r\n                     </div>\r\n                     <div className=\"checkbox\">\r\n                        <input\r\n                           value={isAdmin}\r\n                           checked={isAdmin}\r\n                           type=\"checkbox\"\r\n                           id=\"isAdmin\"\r\n                           name=\"isAdmin\"\r\n                           onChange={this.onChange}\r\n                        />\r\n                        <label htmlFor=\"isAdmin\">Is Admin</label>\r\n                     </div>\r\n                     <div>\r\n                        <button className=\"btn btn-dark\">Update</button>\r\n                     </div>\r\n                  </div>\r\n               </form>\r\n            )}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   user: state.user.user,\r\n   userLoading: state.user.userLoading,\r\n   isAuthenticated: state.user.isAuthenticated,\r\n   error: state.error,\r\n   singleUser: state.user.singleUser,\r\n   updateSuccess: state.user.updateSuccess,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUser, updateUser })(\r\n   AdminUserEditScreen\r\n);\r\n","import React, { Component } from 'react';\r\n\r\nclass CheckoutSteps extends Component {\r\n   render() {\r\n      const { step1, step2, step3, step4 } = this.props;\r\n      return (\r\n         <div className=\"check-out\">\r\n            <div className={step1 ? 'active' : ''}>Sign In</div>\r\n            <div className={step2 ? 'active' : ''}>Shipping</div>\r\n            <div className={step3 ? 'active' : ''}>Payment</div>\r\n            <div className={step4 ? 'active' : ''}>Place Order</div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default CheckoutSteps;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { saveShipping } from '../actions/shippingActions';\r\nimport CheckOutSteps from '../components/CheckOutSteps';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nclass ShippingScreen extends Component {\r\n   state = {\r\n      address: '',\r\n      city: '',\r\n      postalCode: '',\r\n      country: '',\r\n      errorMsg: null,\r\n   };\r\n\r\n   componentDidMount() {\r\n      const { user, shippingAddress } = this.props;\r\n\r\n      if (!user) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n\r\n      if (shippingAddress) {\r\n         const { address, city, country, postalCode } = shippingAddress;\r\n\r\n         this.setState({ address, city, country, postalCode });\r\n      } else {\r\n         return;\r\n      }\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      const { isAuthenticated } = this.props;\r\n\r\n      if (!isAuthenticated) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n   }\r\n\r\n   onChange = (e) => {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n   };\r\n\r\n   onSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      const { country, city, postalCode, address } = this.state;\r\n      // Simple validation\r\n      if (!address) {\r\n         this.setState({ errorMsg: 'Please enter your address' });\r\n      } else if (!city) {\r\n         this.setState({ errorMsg: 'Please enter your city' });\r\n      } else if (!postalCode) {\r\n         this.setState({ errorMsg: 'Please enter your Postal Code' });\r\n      } else if (!country) {\r\n         this.setState({ errorMsg: 'Please enter your country' });\r\n      } else {\r\n         const addressData = {\r\n            address,\r\n            country,\r\n            city,\r\n            postalCode,\r\n         };\r\n\r\n         this.props.saveShipping(addressData);\r\n         this.props.history.push('/payment');\r\n      }\r\n   };\r\n\r\n   render() {\r\n      const { address, city, postalCode, country, errorMsg } = this.state;\r\n      return (\r\n         <div className=\"container\">\r\n            <div className=\"shipping\">\r\n               <CheckOutSteps step1 step2 />\r\n               <h1>Shipping</h1>\r\n               {errorMsg !== null ? <ErrorMessage message={errorMsg} /> : null}\r\n               <form onSubmit={this.onSubmit}>\r\n                  <div>\r\n                     <label htmlFor=\"address\">Address</label>\r\n                     <input\r\n                        type=\"text\"\r\n                        id=\"address\"\r\n                        name=\"address\"\r\n                        value={address}\r\n                        placeholder=\"Enter Address\"\r\n                        onChange={this.onChange}\r\n                     />\r\n                  </div>\r\n                  <div>\r\n                     <label htmlFor=\"city\">City</label>\r\n                     <input\r\n                        type=\"text\"\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        value={city}\r\n                        placeholder=\"Enter City\"\r\n                        onChange={this.onChange}\r\n                     />\r\n                  </div>\r\n                  <div>\r\n                     <label htmlFor=\"postalCode\">Postal Code</label>\r\n                     <input\r\n                        type=\"text\"\r\n                        id=\"postalCode\"\r\n                        name=\"postalCode\"\r\n                        value={postalCode}\r\n                        placeholder=\"Enter Postal Code\"\r\n                        onChange={this.onChange}\r\n                     />\r\n                  </div>\r\n                  <div>\r\n                     <label htmlFor=\"country\">Country</label>\r\n                     <input\r\n                        type=\"text\"\r\n                        id=\"country\"\r\n                        name=\"country\"\r\n                        value={country}\r\n                        placeholder=\"Enter Country\"\r\n                        onChange={this.onChange}\r\n                     />\r\n                  </div>\r\n                  <div>\r\n                     <button className=\"btn btn-primary\">Continue</button>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   user: state.user.user,\r\n   isAuthenticated: state.user.isAuthenticated,\r\n   shippingAddress: state.shipping.shippingAddress,\r\n});\r\n\r\nexport default connect(mapStateToProps, { saveShipping })(ShippingScreen);\r\n","import {\r\n   SAVE_SHIPPING_ADDRESS,\r\n   SAVE_PAYMENT_METHOD,\r\n} from '../constants/shippingConstant';\r\n\r\nexport const saveShipping = (data) => (dispatch, getState) => {\r\n   dispatch({\r\n      type: SAVE_SHIPPING_ADDRESS,\r\n      payload: data,\r\n   });\r\n\r\n   localStorage.setItem(\r\n      'shippingAddress',\r\n      JSON.stringify(getState().shipping.shippingAddress)\r\n   );\r\n};\r\n\r\nexport const savePayment = (payment) => (dispatch) => {\r\n   dispatch({\r\n      type: SAVE_PAYMENT_METHOD,\r\n      payload: payment,\r\n   });\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { savePayment } from '../actions/shippingActions';\r\nimport CheckoutSteps from '../components/CheckOutSteps';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nclass PaymentScreen extends Component {\r\n   state = {\r\n      payment: null,\r\n      errorMsg: null,\r\n   };\r\n\r\n   componentDidMount() {\r\n      const { user, shippingAddress } = this.props;\r\n\r\n      if (!user) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n\r\n      if (!shippingAddress) {\r\n         return this.props.history.push('/shipping');\r\n      }\r\n   }\r\n\r\n   componentDidUpdate() {\r\n      const { isAuthenticated } = this.props;\r\n\r\n      if (!isAuthenticated) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n   }\r\n\r\n   onChange = (e) => {\r\n      this.setState({ payment: e.target.value });\r\n   };\r\n\r\n   onSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      //  Simple validation\r\n      if (this.state.payment === null) {\r\n         this.setState({ errorMsg: 'Please select payment method!' });\r\n      } else {\r\n         this.props.savePayment(this.state.payment);\r\n\r\n         this.setState({ errorMsg: null });\r\n\r\n         this.props.history.push('/placeorder');\r\n      }\r\n   };\r\n\r\n   render() {\r\n      const { errorMsg } = this.state;\r\n      return (\r\n         <div className=\"container\">\r\n            <div className=\"payment\">\r\n               <CheckoutSteps step1 step2 step3 />\r\n               <h1>Payment Method</h1>\r\n               {errorMsg !== null ? <ErrorMessage message={errorMsg} /> : null}\r\n               <form onSubmit={this.onSubmit}>\r\n                  <div>\r\n                     <input\r\n                        type=\"radio\"\r\n                        id=\"paypal\"\r\n                        value=\"PayPal\"\r\n                        name=\"payment\"\r\n                        onChange={this.onChange}\r\n                     />\r\n                     <label htmlFor=\"paypal\">PayPal or Credit Card</label>\r\n                  </div>\r\n                  <div>\r\n                     <input\r\n                        type=\"radio\"\r\n                        id=\"cash\"\r\n                        value=\"Cash on Delivery\"\r\n                        name=\"payment\"\r\n                        onChange={this.onChange}\r\n                     />\r\n                     <label htmlFor=\"cash\">Cash on Delivery</label>\r\n                  </div>\r\n                  <div>\r\n                     <button className=\"btn btn-primary\">Continue</button>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   user: state.user.user,\r\n   isAuthenticated: state.user.isAuthenticated,\r\n   shippingAddress: state.shipping.shippingAddress,\r\n});\r\n\r\nexport default connect(mapStateToProps, { savePayment })(PaymentScreen);\r\n","import axios from 'axios';\r\nimport {\r\n   ORDER_CREATE_FAIL,\r\n   ORDER_CREATE_REQUEST,\r\n   ORDER_CREATE_SUCCESS,\r\n   ORDER_DELIVER_FAIL,\r\n   ORDER_DELIVER_REQUEST,\r\n   ORDER_DELIVER_SUCCESS,\r\n   ORDER_DETAILS_FAIL,\r\n   ORDER_DETAILS_REQUEST,\r\n   ORDER_DETAILS_SUCCESS,\r\n   ORDER_LIST_FAIL,\r\n   ORDER_LIST_REQUEST,\r\n   ORDER_LIST_SUCCESS,\r\n   ORDER_MY_LIST_FAIL,\r\n   ORDER_MY_LIST_REQUEST,\r\n   ORDER_MY_LIST_SUCCESS,\r\n   ORDER_PAY_FAIL,\r\n   ORDER_PAY_REQUEST,\r\n   ORDER_PAY_SUCCESS,\r\n} from '../constants/orderConstant';\r\nimport { returnErrors } from './errorActions';\r\nimport { tokenConfig } from './userActions';\r\n\r\n// Get all order\r\nexport const getOrders = () => (dispatch, getState) => {\r\n   dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .get(' /api/orders', tokenConfig(getState))\r\n      .then((res) => {\r\n         dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n      })\r\n      .catch((err) => {\r\n         const errorMsg = 'An error occured! Please try again in one minute!';\r\n         dispatch(returnErrors(errorMsg, 400, 'ORDER_LIST_FAIL'));\r\n         dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\nexport const createOrder = (order) => (dispatch, getState) => {\r\n   dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .post(' /api/orders', order, tokenConfig(getState))\r\n      .then((res) => {\r\n         dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n         localStorage.removeItem('cartItems');\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'ORDER_CREATE_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\n// Get an order from DB by the ID\r\nexport const getOrder = (id) => (dispatch, getState) => {\r\n   dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .get(` /api/orders/${id}`, tokenConfig(getState))\r\n      .then((res) => {\r\n         dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'ORDER_DETAILS_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\n// Pay order action\r\nexport const payOrder = (orderId, paymentResult) => (dispatch, getState) => {\r\n   dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .put(` /api/orders/${orderId}/pay`, paymentResult, tokenConfig(getState))\r\n      .then((res) => {\r\n         dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'ORDER_PAY_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\n// Pay on cash order action\r\nexport const payCashOrder = (orderId) => (dispatch, getState) => {\r\n   dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .put(` /api/orders/${orderId}/pay/cash`, {}, tokenConfig(getState))\r\n      .then((res) => {\r\n         dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'ORDER_PAY_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\n// Deliver order action\r\nexport const deliverOrder = (order) => (dispatch, getState) => {\r\n   dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .put(` /api/orders/${order._id}/deliver`, order, tokenConfig(getState))\r\n      .then((res) => {\r\n         dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'ORDER_DELIVER_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n         });\r\n      });\r\n};\r\n\r\nexport const listMyOrders = () => (dispatch, getState) => {\r\n   dispatch({\r\n      type: ORDER_MY_LIST_REQUEST,\r\n   });\r\n\r\n   axios\r\n      .get('/api/orders/myorders/mine', tokenConfig(getState))\r\n      .then((res) => {\r\n         dispatch({\r\n            type: ORDER_MY_LIST_SUCCESS,\r\n            payload: res.data,\r\n         });\r\n      })\r\n      .catch((err) => {\r\n         dispatch(\r\n            returnErrors(\r\n               err.response.data.msg,\r\n               err.response.status,\r\n               'ORDER_MY_LIST_FAIL'\r\n            )\r\n         );\r\n         dispatch({\r\n            type: ORDER_MY_LIST_FAIL,\r\n         });\r\n      });\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CheckoutSteps from '../components/CheckOutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\nimport Loader from '../components/Loader';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nclass PlaceOrderScreen extends Component {\r\n   componentDidMount() {\r\n      const { user, shippingAddress, paymentMethod } = this.props;\r\n\r\n      if (!user) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n\r\n      if (!shippingAddress) {\r\n         return this.props.history.push('/shipping');\r\n      }\r\n\r\n      if (!paymentMethod) {\r\n         return this.props.history.push('/payment');\r\n      }\r\n   }\r\n\r\n   componentDidUpdate() {\r\n      const { isAuthenticated, order } = this.props;\r\n\r\n      if (!isAuthenticated) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n\r\n      if (order !== null) {\r\n         this.props.history.push(`/order/${order._id}`);\r\n      }\r\n   }\r\n\r\n   placeOrder = () => {\r\n      const { cartItems, shippingAddress, paymentMethod, user } = this.props;\r\n      const toPrice = (num) => Number(num.toFixed(2));\r\n      const itemPrice = toPrice(\r\n         cartItems.reduce((a, c) => a + c.qty * c.price, 0)\r\n      );\r\n\r\n      const shippingPrice = toPrice(\r\n         itemPrice < 1000 ? toPrice(0) : toPrice(10)\r\n      );\r\n\r\n      const taxPrice = toPrice(0.15 * itemPrice);\r\n      const totalPrice = toPrice(itemPrice + shippingPrice + taxPrice);\r\n\r\n      const newOrder = {\r\n         orderItems: cartItems,\r\n         shippingAddress,\r\n         paymentMethod,\r\n         itemPrice,\r\n         shippingPrice,\r\n         taxPrice,\r\n         totalPrice,\r\n         user: user.id,\r\n         userObject: user,\r\n      };\r\n\r\n      this.props.createOrder(newOrder);\r\n   };\r\n\r\n   render() {\r\n      const { cartItems, shippingAddress, paymentMethod, orderLoading, error } =\r\n         this.props;\r\n\r\n      const { address, city, postalCode, country } = shippingAddress;\r\n\r\n      const toPrice = (num) => Number(num.toFixed(2));\r\n      const itemPrice = toPrice(\r\n         cartItems.reduce((a, c) => a + c.qty * c.price, 0)\r\n      );\r\n\r\n      const shippingPrice = toPrice(\r\n         itemPrice < 1000 ? toPrice(0) : toPrice(10)\r\n      );\r\n\r\n      const taxPrice = toPrice(0.15 * itemPrice);\r\n      const totalPrice = toPrice(itemPrice + shippingPrice + taxPrice);\r\n\r\n      return (\r\n         <div className=\"confirm-order-page\">\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            {error.msg !== null ? <ErrorMessage message={error.msg} /> : null}\r\n            <div className=\"confirm\">\r\n               <div className=\"place-order\">\r\n                  <div className=\"boxes\">\r\n                     <div className=\"box\">\r\n                        <h3>Shipping</h3>\r\n                        <p>\r\n                           Address: {address}, {city}, {postalCode}, {country}\r\n                        </p>\r\n                     </div>\r\n                     <div className=\"box\">\r\n                        <h3>Payment Method</h3>\r\n                        <p>Method: {paymentMethod}</p>\r\n                     </div>\r\n                     <div className=\"box\">\r\n                        <h3>Order Item(s)</h3>\r\n                        {cartItems.map((item) => (\r\n                           <div className=\"item-box\" key={item.id}>\r\n                              <div className=\"img\">\r\n                                 <img src={item.image} alt={item.name} />\r\n                              </div>\r\n                              <div>\r\n                                 <h5>{item.name}</h5>\r\n                              </div>\r\n                              <div className=\"qty\">\r\n                                 <h5>\r\n                                    {item.qty} x {item.price} = #{' '}\r\n                                    {item.qty * item.price}\r\n                                 </h5>\r\n                              </div>\r\n                           </div>\r\n                        ))}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               <div className=\"summary-box\">\r\n                  <div className=\"box\">\r\n                     <div>\r\n                        <h3>ORDER SUMMARY</h3>\r\n                     </div>\r\n                     <div>\r\n                        <p>Items:</p>\r\n                        <span>#{itemPrice}</span>\r\n                     </div>\r\n                     <div>\r\n                        <p>Shipping:</p>\r\n                        <span>#{shippingPrice}</span>\r\n                     </div>\r\n                     <div>\r\n                        <p>Tax:</p>\r\n                        <span>#{taxPrice}</span>\r\n                     </div>\r\n                     <div>\r\n                        <p>Total:</p>\r\n                        <span>\r\n                           <b>#{totalPrice}</b>\r\n                        </span>\r\n                     </div>\r\n                     <div onClick={this.placeOrder} className=\"box-btn\">\r\n                        <button\r\n                           disabled={cartItems.length <= 0}\r\n                           className=\"btn btn-primary\"\r\n                        >\r\n                           Place Order\r\n                        </button>\r\n                        {orderLoading ? <Loader /> : null}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   user: state.user.user,\r\n   isAuthenticated: state.user.isAuthenticated,\r\n   cartItems: state.cart.cartItems,\r\n   shippingAddress: state.shipping.shippingAddress,\r\n   paymentMethod: state.shipping.paymentMethod,\r\n   order: state.order.order,\r\n   orderLoading: state.order.orderLoading,\r\n   error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createOrder })(PlaceOrderScreen);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getOrder, payOrder } from '../actions/orderActions';\r\nimport Loader from '../components/Loader';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport Message from '../components/Message';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport axios from 'axios';\r\n\r\nclass OrderReviewScreen extends Component {\r\n   componentDidMount() {\r\n      const id = this.props.match.params.id;\r\n\r\n      const { order, user } = this.props;\r\n\r\n      if (!user) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n\r\n      const addPayPalScript = async () => {\r\n         const { data: clientId } = await axios.get('/api/config/paypal');\r\n         const script = document.createElement('script');\r\n         script.type = 'text/javascript';\r\n         script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n         script.async = true;\r\n         script.onload = () => {\r\n            this.setState({ sdk: true });\r\n         };\r\n         document.body.appendChild(script);\r\n      };\r\n      // window.location.reload(false);\r\n\r\n      if (!order || order._id !== id) {\r\n         this.props.getOrder(id);\r\n      } else if (!order.isPaid) {\r\n         if (!window.paypal) {\r\n            addPayPalScript();\r\n         } else {\r\n            this.setState({ sdk: true });\r\n         }\r\n      }\r\n   }\r\n\r\n   componentDidUpdate() {\r\n      const { isAuthenticated } = this.props;\r\n\r\n      if (!isAuthenticated) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n   }\r\n\r\n   successPaymentHandler = (paymentResult) => {\r\n      const { order } = this.props;\r\n      this.props.payOrder(order._id, paymentResult);\r\n   };\r\n   render() {\r\n      const { order, orderLoading, loadingPay, error } = this.props;\r\n      return (\r\n         <div className=\"order-review-page\">\r\n            <div className=\"order-review\">\r\n               {orderLoading ? (\r\n                  <Loader />\r\n               ) : error.msg !== null ? (\r\n                  <ErrorMessage message={error.msg} />\r\n               ) : order === null ? (\r\n                  <Loader />\r\n               ) : (\r\n                  <>\r\n                     <h1>Order {order._id}</h1>\r\n                     <div className=\"boxes\">\r\n                        <div className=\"box\">\r\n                           <h3>Shipping</h3>\r\n                           <p>Name: {order.userObject.name} </p>\r\n                           <p>Email: {order.userObject.email} </p>\r\n                           <p>\r\n                              Address: {order.shippingAddress.address},{' '}\r\n                              {order.shippingAddress.city},{' '}\r\n                              {order.shippingAddress.postalCode},{' '}\r\n                              {order.shippingAddress.country}{' '}\r\n                           </p>\r\n                           {order.isDelivered ? (\r\n                              <Message\r\n                                 message={`Delivered at ${order.deliveredAt}`}\r\n                              />\r\n                           ) : (\r\n                              <ErrorMessage message={'Not Delivered'} />\r\n                           )}\r\n                        </div>\r\n                        <div className=\"box\">\r\n                           <h3>Payment Method</h3>\r\n                           <p>Method: {order.paymentMethod}</p>\r\n                           {order.isPaid ? (\r\n                              <Message message={`Paid at ${order.paidAt}`} />\r\n                           ) : (\r\n                              <ErrorMessage message=\"Not Paid\" />\r\n                           )}\r\n                        </div>\r\n                        <div className=\"box\">\r\n                           <h3>Order Items</h3>\r\n                           {order.orderItems.map((item) => (\r\n                              <div key={item._id} className=\"item-box\">\r\n                                 <div className=\"img\">\r\n                                    <img src={item.image} alt={item.name} />\r\n                                 </div>\r\n                                 <div className=\"name\">\r\n                                    <h5> {item.name} </h5>\r\n                                 </div>\r\n                                 <div className=\"qty\">\r\n                                    <h5>\r\n                                       {item.qty} x {item.price} = #{' '}\r\n                                       {item.qty * item.price}\r\n                                    </h5>\r\n                                 </div>\r\n                              </div>\r\n                           ))}\r\n                        </div>\r\n                     </div>\r\n                  </>\r\n               )}\r\n            </div>\r\n            <div className=\"summary-box\">\r\n               {order === null ? (\r\n                  <Loader />\r\n               ) : (\r\n                  <div className=\"box\">\r\n                     <div>\r\n                        <h3>Order Summary</h3>\r\n                     </div>\r\n                     <div>\r\n                        <p>Items:</p>\r\n                        <span># {order.itemPrice} </span>\r\n                     </div>\r\n                     <div>\r\n                        <p>Shipping:</p>\r\n                        <span># {order.shippingPrice} </span>\r\n                     </div>\r\n                     <div>\r\n                        <p>Tax:</p>\r\n                        <span># {order.taxPrice} </span>\r\n                     </div>\r\n                     <div>\r\n                        <p>Total:</p>\r\n                        <span>\r\n                           <b># {order.totalPrice}</b>{' '}\r\n                        </span>\r\n                     </div>\r\n                     {!order.isPaid ? (\r\n                        order.paymentMethod === 'PayPal' ? (\r\n                           <>\r\n                              {loadingPay ? <Loader /> : null}\r\n                              <PayPalButton\r\n                                 amount={order.totalPrice}\r\n                                 onSuccess={this.successPaymentHandler}\r\n                              />\r\n                           </>\r\n                        ) : null\r\n                     ) : null}\r\n                  </div>\r\n               )}\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   user: state.user.user,\r\n   isAuthenticated: state.user.isAuthenticated,\r\n   order: state.order.order,\r\n   orderLoading: state.order.orderLoading,\r\n   loadingPay: state.order.loading,\r\n   successPay: state.order.success,\r\n   error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getOrder, payOrder })(\r\n   OrderReviewScreen\r\n);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getOrders } from '../actions/orderActions';\r\nimport Loader from '../components/Loader';\r\nimport Moment from 'react-moment';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nclass AdminOrderListScreen extends Component {\r\n   state = {\r\n      currentPage: 1,\r\n      ordersPerPage: 5,\r\n   };\r\n\r\n   componentDidMount() {\r\n      const { user } = this.props;\r\n\r\n      if (!user || !user.isAdmin) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n      this.props.getOrders();\r\n   }\r\n\r\n   componentDidUpdate() {\r\n      const { isAuthenticated } = this.props;\r\n\r\n      if (!isAuthenticated) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n   }\r\n\r\n   handleClick = (e) => {\r\n      this.setState({\r\n         currentPage: Number(e.target.id),\r\n      });\r\n   };\r\n\r\n   getOrderDetails = (id) => {\r\n      this.props.history.push(`/admin-order-details/${id}`);\r\n   };\r\n   render() {\r\n      const { orders, orderLoading, error } = this.props;\r\n\r\n      return (\r\n         <div className=\"admin-order-list\">\r\n            <div className=\"header\">\r\n               <h1>Orders</h1>\r\n            </div>\r\n            {orderLoading ? (\r\n               <Loader />\r\n            ) : error.msg !== null ? (\r\n               <ErrorMessage message={error.msg} />\r\n            ) : orders.length === 0 ? (\r\n               <div className=\"alert\">Orders are empty!.</div>\r\n            ) : (\r\n               <div className=\"order\">\r\n                  <table cellSpacing=\"0\">\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Id</th>\r\n                           <th>User</th>\r\n                           <th>Date</th>\r\n                           <th>Total</th>\r\n                           <th>Paid</th>\r\n                           <th>Delivered</th>\r\n                           <th></th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {orders.map((order) => (\r\n                           <tr key={order._id}>\r\n                              <td>{order._id}</td>\r\n                              <td>{order.userObject.name}</td>\r\n                              <td>\r\n                                 {' '}\r\n                                 <Moment format=\"MM-DD-YYYY\">\r\n                                    {order.orderDate}\r\n                                 </Moment>\r\n                              </td>\r\n                              <td>#{order.totalPrice}</td>\r\n                              <td>\r\n                                 {order.isPaid ? (\r\n                                    <Moment format=\"MM-DD-YYYY\">\r\n                                       {order.paidAt}\r\n                                    </Moment>\r\n                                 ) : (\r\n                                    <i className=\"fas fa-times\"></i>\r\n                                 )}{' '}\r\n                              </td>\r\n                              <td>\r\n                                 {order.isDelivered ? (\r\n                                    <Moment format=\"MM-DD-YYYY\">\r\n                                       {order.deliveredAt}\r\n                                    </Moment>\r\n                                 ) : (\r\n                                    <i className=\"fas fa-times\"></i>\r\n                                 )}{' '}\r\n                              </td>\r\n                              <td>\r\n                                 <button\r\n                                    onClick={this.getOrderDetails.bind(\r\n                                       this,\r\n                                       order._id\r\n                                    )}\r\n                                    className=\"btn btn-light\"\r\n                                 >\r\n                                    Details\r\n                                 </button>\r\n                              </td>\r\n                           </tr>\r\n                        ))}\r\n                     </tbody>\r\n                  </table>\r\n\r\n                  <div className=\"mobile\">\r\n                     {orders.map((order) => (\r\n                        <div\r\n                           onClick={this.getOrderDetails.bind(this, order._id)}\r\n                           key={order._id}\r\n                           className=\"mobile-order\"\r\n                        >\r\n                           <div className=\"img\">\r\n                              <img\r\n                                 src={order.orderItems[0].image}\r\n                                 alt={order.orderItems[0].name}\r\n                              />\r\n                           </div>\r\n                           <div className=\"content\">\r\n                              <h3>{order.userObject.name}</h3>\r\n                              <p>Order {order._id}</p>\r\n                              <h4>\r\n                                 {order.isPaid ? (\r\n                                    <span\r\n                                       style={{\r\n                                          backgroundColor: '#28a745',\r\n                                       }}\r\n                                    >\r\n                                       Paid\r\n                                    </span>\r\n                                 ) : (\r\n                                    <span\r\n                                       style={{\r\n                                          backgroundColor: '#dc3545',\r\n                                       }}\r\n                                    >\r\n                                       Not Paid\r\n                                    </span>\r\n                                 )}\r\n                              </h4>\r\n                              <h4>\r\n                                 {order.isDelivered ? (\r\n                                    <span\r\n                                       style={{\r\n                                          backgroundColor: '#28a745',\r\n                                       }}\r\n                                    >\r\n                                       Delivered\r\n                                    </span>\r\n                                 ) : (\r\n                                    <span\r\n                                       style={{\r\n                                          backgroundColor: '#dc3545',\r\n                                       }}\r\n                                    >\r\n                                       Not Delivered\r\n                                    </span>\r\n                                 )}\r\n                              </h4>\r\n                              <p>Order date - {order.orderDate}</p>\r\n                           </div>\r\n                        </div>\r\n                     ))}\r\n                  </div>\r\n               </div>\r\n            )}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   user: state.user.user,\r\n   isAuthenticated: state.user.isAuthenticated,\r\n   orders: state.order.orders,\r\n   orderLoading: state.order.orderLoading,\r\n   error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getOrders })(AdminOrderListScreen);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport { getOrder, deliverOrder, payCashOrder } from '../actions/orderActions';\r\n\r\nclass AdminOrderDetailsScreen extends Component {\r\n   componentDidMount() {\r\n      const id = this.props.match.params.id;\r\n\r\n      const { user } = this.props;\r\n\r\n      if (!user || !user.isAdmin) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n\r\n      this.props.getOrder(id);\r\n   }\r\n\r\n   componentDidUpdate() {\r\n      const { isAuthenticated } = this.props;\r\n\r\n      if (!isAuthenticated) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n   }\r\n\r\n   markPaid = () => {\r\n      const { order } = this.props;\r\n\r\n      this.props.payCashOrder(order._id);\r\n   };\r\n\r\n   markDelivered = () => {\r\n      const { order } = this.props;\r\n      this.props.deliverOrder(order);\r\n   };\r\n\r\n   render() {\r\n      const { order, orderLoading, loadingDeliver, loadingPay } = this.props;\r\n      return (\r\n         <div className=\"order-review-page\">\r\n            <div className=\"order-review\">\r\n               {orderLoading ? (\r\n                  <Loader />\r\n               ) : order === null ? (\r\n                  <Loader />\r\n               ) : (\r\n                  <>\r\n                     <h1>Order {order._id} </h1>\r\n                     <div className=\"boxes\">\r\n                        <div className=\"box\">\r\n                           <h3>Shipping</h3>\r\n                           <p>Name: {order.userObject.name} </p>\r\n                           <p>Email: {order.userObject.email} </p>\r\n                           <p>\r\n                              Address: {order.shippingAddress.address},{' '}\r\n                              {order.shippingAddress.city},{' '}\r\n                              {order.shippingAddress.postalCode},{' '}\r\n                              {order.shippingAddress.country}{' '}\r\n                           </p>\r\n                           {order.isDelivered ? (\r\n                              <Message\r\n                                 message={`Delivered at ${order.deliveredAt}`}\r\n                              />\r\n                           ) : (\r\n                              <ErrorMessage message={'Not Deliverd'} />\r\n                           )}\r\n                        </div>\r\n                        <div className=\"box\">\r\n                           <h3>Payment Method</h3>\r\n                           <p>Method: {order.paymentMethod}</p>\r\n                           {order.isPaid ? (\r\n                              <Message message={`Paid at ${order.paidAt}`} />\r\n                           ) : (\r\n                              <ErrorMessage message=\"Not Paid\" />\r\n                           )}\r\n                        </div>\r\n                        <div className=\"box\">\r\n                           <h3>Order Items</h3>\r\n                           {order.orderItems.map((item) => (\r\n                              <div key={item._id} className=\"item-box\">\r\n                                 <div className=\"img\">\r\n                                    <img src={item.image} alt={item.name} />\r\n                                 </div>\r\n                                 <div className=\"name\">\r\n                                    <h5> {item.name} </h5>\r\n                                 </div>\r\n                                 <div className=\"qty\">\r\n                                    <h5>\r\n                                       {item.qty} x {item.price} = #{' '}\r\n                                       {item.qty * item.price}\r\n                                    </h5>\r\n                                 </div>\r\n                              </div>\r\n                           ))}\r\n                        </div>\r\n                     </div>\r\n                  </>\r\n               )}\r\n            </div>\r\n            <div className=\"summary-box\">\r\n               {order === null ? (\r\n                  <Loader />\r\n               ) : (\r\n                  <div className=\"box\">\r\n                     <div>\r\n                        <h3>Order Summary</h3>\r\n                     </div>\r\n                     <div>\r\n                        <p>Items:</p>\r\n                        <span># {order.itemPrice} </span>\r\n                     </div>\r\n                     <div>\r\n                        <p>Shipping:</p>\r\n                        <span># {order.shippingPrice} </span>\r\n                     </div>\r\n                     <div>\r\n                        <p>Tax:</p>\r\n                        <span># {order.taxPrice} </span>\r\n                     </div>\r\n                     <div>\r\n                        <p>Total:</p>\r\n                        <span>\r\n                           <b># {order.totalPrice}</b>{' '}\r\n                        </span>\r\n                     </div>\r\n                     {!order.isPaid ? (\r\n                        order.paymentMethod === 'Cash on Delivery' ? (\r\n                           <div className=\"box-btn\">\r\n                              <button\r\n                                 onClick={this.markPaid}\r\n                                 className=\"btn btn-primary\"\r\n                              >\r\n                                 Mark as Paid\r\n                              </button>\r\n                              {loadingPay ? <Loader /> : null}\r\n                           </div>\r\n                        ) : null\r\n                     ) : null}\r\n                     {order.isPaid ? (\r\n                        order.isDelivered ? null : (\r\n                           <div className=\"box-btn\">\r\n                              <button\r\n                                 onClick={this.markDelivered}\r\n                                 className=\"btn btn-primary\"\r\n                              >\r\n                                 Mark as Delivered\r\n                              </button>\r\n                              {loadingDeliver ? <Loader /> : null}\r\n                           </div>\r\n                        )\r\n                     ) : null}\r\n                  </div>\r\n               )}\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuthenticated: state.user.isAuthenticated,\r\n   user: state.user.user,\r\n   order: state.order.order,\r\n   orderLoading: state.order.orderLoading,\r\n   loadingDeliver: state.order.loadingDelivered,\r\n   successdeliver: state.order.successDelivered,\r\n   loadingPay: state.order.loading,\r\n   successPay: state.order.success,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   getOrder,\r\n   deliverOrder,\r\n   payCashOrder,\r\n})(AdminOrderDetailsScreen);\r\n","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { listMyOrders } from '../actions/orderActions';\r\nimport Loader from '../components/Loader';\r\n\r\nclass MyOrderScreen extends Component {\r\n   componentDidMount() {\r\n      const { user } = this.props;\r\n\r\n      if (!user) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n      this.props.listMyOrders();\r\n   }\r\n\r\n   componentDidUpdate() {\r\n      const { isAuthenticated } = this.props;\r\n\r\n      if (!isAuthenticated) {\r\n         return this.props.history.push('/signin');\r\n      }\r\n   }\r\n\r\n   getOrderDetails = (id) => {\r\n      this.props.history.push(`/order/${id}`);\r\n   };\r\n   render() {\r\n      const { myOrders, orderLoading } = this.props;\r\n      return (\r\n         <div className=\"myorder-page\">\r\n            <h1>My Orders</h1>\r\n\r\n            {orderLoading ? (\r\n               <Loader />\r\n            ) : (\r\n               <div className=\"myorder\">\r\n                  {myOrders.length === 0 ? (\r\n                     <div className=\"alert\">Your order list is empty</div>\r\n                  ) : (\r\n                     <>\r\n                        <table cellSpacing=\"0\">\r\n                           <thead>\r\n                              <tr>\r\n                                 <th>Id</th>\r\n                                 <th>Date</th>\r\n                                 <th>Total</th>\r\n                                 <th>Paid</th>\r\n                                 <th>Delivered</th>\r\n                                 <th></th>\r\n                              </tr>\r\n                           </thead>\r\n                           <tbody>\r\n                              {myOrders.map((order) => (\r\n                                 <tr key={order._id}>\r\n                                    <td> {order._id} </td>\r\n                                    <td>\r\n                                       {' '}\r\n                                       <Moment format=\"MM-DD-YYYY\">\r\n                                          {order.orderDate}\r\n                                       </Moment>{' '}\r\n                                    </td>\r\n                                    <td> #{order.totalPrice} </td>\r\n                                    <td>\r\n                                       {' '}\r\n                                       {order.isPaid ? (\r\n                                          <Moment format=\"MM-DD-YYYY\">\r\n                                             {order.paidAt}\r\n                                          </Moment>\r\n                                       ) : (\r\n                                          <i className=\"fas fa-times\"></i>\r\n                                       )}{' '}\r\n                                    </td>\r\n                                    <td>\r\n                                       {order.isDelivered ? (\r\n                                          <Moment format=\"MM-DD-YYYY\">\r\n                                             {order.deliveredAt}\r\n                                          </Moment>\r\n                                       ) : (\r\n                                          <i className=\"fas fa-times\"></i>\r\n                                       )}\r\n                                    </td>\r\n                                    <td>\r\n                                       <button\r\n                                          onClick={this.getOrderDetails.bind(\r\n                                             this,\r\n                                             order._id\r\n                                          )}\r\n                                          className=\"btn btn-light\"\r\n                                       >\r\n                                          Details\r\n                                       </button>\r\n                                    </td>\r\n                                 </tr>\r\n                              ))}\r\n                           </tbody>\r\n                        </table>\r\n\r\n                        <div className=\"mobile\">\r\n                           {myOrders.map((order) => (\r\n                              <div\r\n                                 onClick={this.getOrderDetails.bind(\r\n                                    this,\r\n                                    order._id\r\n                                 )}\r\n                                 key={order._id}\r\n                                 className=\"mobile-order\"\r\n                              >\r\n                                 <div className=\"img\">\r\n                                    <img\r\n                                       src={order.orderItems[0].image}\r\n                                       alt={order.orderItems[0].name}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"content\">\r\n                                    <h3>{order.orderItems[0].name}</h3>\r\n                                    <p>Order {order._id}</p>\r\n                                    <h4>\r\n                                       {order.isPaid ? (\r\n                                          <span\r\n                                             style={{\r\n                                                backgroundColor: '#28a745',\r\n                                             }}\r\n                                          >\r\n                                             Paid\r\n                                          </span>\r\n                                       ) : (\r\n                                          <span\r\n                                             style={{\r\n                                                backgroundColor: '#dc3545',\r\n                                             }}\r\n                                          >\r\n                                             Not Paid\r\n                                          </span>\r\n                                       )}\r\n                                    </h4>\r\n                                    <h4>\r\n                                       {order.isDelivered ? (\r\n                                          <span\r\n                                             style={{\r\n                                                backgroundColor: '#28a745',\r\n                                             }}\r\n                                          >\r\n                                             Delivered\r\n                                          </span>\r\n                                       ) : (\r\n                                          <span\r\n                                             style={{\r\n                                                backgroundColor: '#dc3545',\r\n                                             }}\r\n                                          >\r\n                                             Not Delivered\r\n                                          </span>\r\n                                       )}\r\n                                    </h4>\r\n                                    <p>Order date - {order.orderDate}</p>\r\n                                 </div>\r\n                              </div>\r\n                           ))}\r\n                        </div>\r\n                     </>\r\n                  )}\r\n               </div>\r\n            )}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   user: state.user.user,\r\n   isAuthenticated: state.user.isAuthenticated,\r\n   myOrders: state.order.myOrders,\r\n   orderLoading: state.order.orderLoading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { listMyOrders })(MyOrderScreen);\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function ScrollToTop() {\r\n   const { pathname } = useLocation();\r\n\r\n   useEffect(() => {\r\n      window.scrollTo(0, 0);\r\n   }, [pathname]);\r\n\r\n   return null;\r\n}\r\n","import React, { Component } from 'react';\nimport './css/style.css';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductDetailsScreen from './screens/ProductDetailsScreen';\nimport CartScreen from './screens/CartScreen';\nimport SigninScreen from './screens/SigninScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport AdminProductList from './screens/AdminProductListScreen';\nimport AdminProductCreate from './screens/AdminProductCreateScreen';\nimport AdminUserList from './screens/AdminUserListScreen';\nimport AdminUserEditScreen from './screens/AdminUserEditScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderReviewScreen from './screens/OrderReviewScreen';\nimport AdminOrderListScreen from './screens/AdminOrderListScreen';\nimport AdminOrderDetailsScreen from './screens/AdminOrderDetailsScreen';\nimport MyOrderScreen from './screens/MyOrderScreen';\nimport ScrollToTop from './components/ScrollToTop';\n\nclass App extends Component {\n   render() {\n      return (\n         <Provider store={store}>\n            <Router className=\"router\">\n               <ScrollToTop />\n               <Header />\n               <div className=\"container\">\n                  <Switch>\n                     <Route path=\"/\" exact component={HomeScreen} />\n                     <Route\n                        path=\"/product/:id\"\n                        component={ProductDetailsScreen}\n                     />\n                     <Route path=\"/cart/:id?\" component={CartScreen} />\n                     <Route path=\"/signin\" component={SigninScreen} />\n                     <Route path=\"/register\" component={RegisterScreen} />\n                     <Route path=\"/shipping\" component={ShippingScreen} />\n                     <Route path=\"/payment\" component={PaymentScreen} />\n                     <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n                     <Route path=\"/order/:id\" component={OrderReviewScreen} />\n                     <Route path=\"/profile\" component={ProfileScreen} />\n                     <Route path=\"/myorders\" component={MyOrderScreen} />\n\n                     {/* Admin Page */}\n                     <Route\n                        path=\"/admin-product-list\"\n                        component={AdminProductList}\n                     />\n                     <Route\n                        path=\"/admin-product-create\"\n                        component={AdminProductCreate}\n                     />\n                     <Route path=\"/admin-user-list\" component={AdminUserList} />\n                     <Route\n                        path=\"/admin-user-edit/:id\"\n                        component={AdminUserEditScreen}\n                     />\n                     <Route\n                        path=\"/admin-order-list\"\n                        component={AdminOrderListScreen}\n                     />\n                     <Route\n                        path=\"/admin-order-details/:id\"\n                        component={AdminOrderDetailsScreen}\n                     />\n                  </Switch>\n               </div>\n               <Footer />\n            </Router>\n         </Provider>\n      );\n   }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n"],"sourceRoot":""}